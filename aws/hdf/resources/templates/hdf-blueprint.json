{
    "configurations": [
        {
            "nifi-registry-authorizers-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<!--\n    This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order\n    to use a specific authorizer it must be configured here and its identifier must be specified in the nifi.properties file.\n    If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.\n    This file allows for configuration of them, but they must be configured in order:\n\n    ...\n    all userGroupProviders\n    all accessPolicyProviders\n    all Authorizers\n    ...\n-->\n<authorizers>\n\n    <!--\n        The FileUserGroupProvider will provide support for managing users and groups which is backed by a file\n        on the local file system.\n\n        - Users File - The file where the FileUserGroupProvider will store users and groups.\n\n        - Initial User Identity [unique key] - The identity of a users and systems to seed the Users File. The name of\n            each property must be unique, for example: \"Initial User Identity A\", \"Initial User Identity B\",\n            \"Initial User Identity C\" or \"Initial User Identity 1\", \"Initial User Identity 2\", \"Initial User Identity 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities,\n            so the values should be the unmapped identities (i.e. full DN from a certificate).\n    -->\n    <userGroupProvider>\n        <identifier>file-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.file.FileUserGroupProvider</class>\n        <property name=\"Users File\">{{nifi_registry_internal_config_dir}}/users.xml</property>\n        <property name=\"Initial User Identity 0\">{{nifi_registry_initial_admin_id}}</property>\n        {{nifi_registry_ssl_config_content | replace(\"NiFi\",\"Initial User\")}}\n    </userGroupProvider>\n\n    <!--\n        The LdapUserGroupProvider will retrieve users and groups from an LDAP server. The users and groups\n        are not configurable.\n\n        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.\n\n        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n        'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using LDAPS or START_TLS.\n        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n        'Page Size' - Sets the page size when retrieving users and groups. If not specified, no paging is performed.\n        'Sync Interval' - Duration of time between syncing users and groups. (i.e. 30 mins).\n\n        'User Search Base' - Base DN for searching for users (i.e. ou=users,o=nifi). Required to search users.\n        'User Object Class' - Object class for identifying users (i.e. person). Required if searching users.\n        'User Search Scope' - Search scope for searching users (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching users.\n        'User Search Filter' - Filter for searching for users against the 'User Search Base' (i.e. (memberof=cn=team1,ou=groups,o=nifi) ). Optional.\n        'User Identity Attribute' - Attribute to use to extract user identity (i.e. cn). Optional. If not set, the entire DN is used.\n        'User Group Name Attribute' - Attribute to use to define group membership (i.e. memberof). Optional. If not set\n            group membership will not be calculated through the users. Will rely on group membership being defined\n            through 'Group Member Attribute' if set.\n        'User Group Name Attribute - Referenced Group Attribute' - If blank, the value of the attribute defined in 'User Group Name Attribute'\n            is expected to be the full dn of the group. If not blank, this property will define the attribute of the group ldap entry that\n            the value of the attribute defined in 'User Group Name Attribute' is referencing (i.e. name). Use of this property requires that\n            'Group Search Base' is also configured.\n\n        'Group Search Base' - Base DN for searching for groups (i.e. ou=groups,o=nifi). Required to search groups.\n        'Group Object Class' - Object class for identifying groups (i.e. groupOfNames). Required if searching groups.\n        'Group Search Scope' - Search scope for searching groups (ONE_LEVEL, OBJECT, or SUBTREE). Required if searching groups.\n        'Group Search Filter' - Filter for searching for groups against the 'Group Search Base'. Optional.\n        'Group Name Attribute' - Attribute to use to extract group name (i.e. cn). Optional. If not set, the entire DN is used.\n        'Group Member Attribute' - Attribute to use to define group membership (i.e. member). Optional. If not set\n            group membership will not be calculated through the groups. Will rely on group member being defined\n            through 'User Group Name Attribute' if set.\n        'Group Member Attribute - Referenced User Attribute' - If blank, the value of the attribute defined in 'Group Member Attribute'\n            is expected to be the full dn of the user. If not blank, this property will define the attribute of the user ldap entry that\n            the value of the attribute defined in 'Group Member Attribute' is referencing (i.e. uid). Use of this property requires that\n            'User Search Base' is also configured. (i.e. member: cn=User 1,ou=users,o=nifi-registry vs. memberUid: user1)\n\n        NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the user identities.\n            Group names are not mapped.\n    -->\n    <!-- To enable the ldap-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>ldap-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.ldap.tenants.LdapUserGroupProvider</class>\n        <property name=\"Authentication Strategy\">START_TLS</property>\n\n        <property name=\"Manager DN\"></property>\n        <property name=\"Manager Password\"></property>\n\n        <property name=\"TLS - Keystore\"></property>\n        <property name=\"TLS - Keystore Password\"></property>\n        <property name=\"TLS - Keystore Type\"></property>\n        <property name=\"TLS - Truststore\"></property>\n        <property name=\"TLS - Truststore Password\"></property>\n        <property name=\"TLS - Truststore Type\"></property>\n        <property name=\"TLS - Client Auth\"></property>\n        <property name=\"TLS - Protocol\"></property>\n        <property name=\"TLS - Shutdown Gracefully\"></property>\n\n        <property name=\"Referral Strategy\">FOLLOW</property>\n        <property name=\"Connect Timeout\">10 secs</property>\n        <property name=\"Read Timeout\">10 secs</property>\n\n        <property name=\"Url\"></property>\n        <property name=\"Page Size\"></property>\n        <property name=\"Sync Interval\">30 mins</property>\n\n        <property name=\"User Search Base\"></property>\n        <property name=\"User Object Class\">person</property>\n        <property name=\"User Search Scope\">ONE_LEVEL</property>\n        <property name=\"User Search Filter\"></property>\n        <property name=\"User Identity Attribute\"></property>\n        <property name=\"User Group Name Attribute\"></property>\n        <property name=\"User Group Name Attribute - Referenced Group Attribute\"></property>\n\n        <property name=\"Group Search Base\"></property>\n        <property name=\"Group Object Class\">group</property>\n        <property name=\"Group Search Scope\">ONE_LEVEL</property>\n        <property name=\"Group Search Filter\"></property>\n        <property name=\"Group Name Attribute\"></property>\n        <property name=\"Group Member Attribute\"></property>\n        <property name=\"Group Member Attribute - Referenced User Attribute\"></property>\n    </userGroupProvider>\n    To enable the ldap-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The CompositeUserGroupProvider will provide support for retrieving users and groups from multiple sources.\n\n        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of\n            each property must be unique, for example: \"User Group Provider A\", \"User Group Provider B\",\n            \"User Group Provider C\" or \"User Group Provider 1\", \"User Group Provider 2\", \"User Group Provider 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior\n            would need to be applied by the base implementation.\n    -->\n    <!-- To enable the composite-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>composite-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.CompositeUserGroupProvider</class>\n        <property name=\"User Group Provider 1\"></property>\n    </userGroupProvider>\n    To enable the composite-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The CompositeConfigurableUserGroupProvider will provide support for retrieving users and groups from multiple sources.\n        Additionally, a single configurable user group provider is required. Users from the configurable user group provider\n        are configurable, however users loaded from one of the User Group Provider [unique key] will not be.\n\n        - Configurable User Group Provider - A configurable user group provider.\n\n        - User Group Provider [unique key] - The identifier of user group providers to load from. The name of\n            each property must be unique, for example: \"User Group Provider A\", \"User Group Provider B\",\n            \"User Group Provider C\" or \"User Group Provider 1\", \"User Group Provider 2\", \"User Group Provider 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties are not applied in this implementation. This behavior\n            would need to be applied by the base implementation.\n    -->\n    <!-- To enable the composite-configurable-user-group-provider remove 2 lines. This is 1 of 2.\n    <userGroupProvider>\n        <identifier>composite-configurable-user-group-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.CompositeConfigurableUserGroupProvider</class>\n        <property name=\"Configurable User Group Provider\">file-user-group-provider</property>\n        <property name=\"User Group Provider 1\"></property>\n    </userGroupProvider>\n    To enable the composite-configurable-user-group-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n        The FileAccessPolicyProvider will provide support for managing access policies which is backed by a file\n        on the local file system.\n\n        - User Group Provider - The identifier for an User Group Provider defined above that will be used to access\n            users and groups for use in the managed access policies.\n\n        - Authorizations File - The file where the FileAccessPolicyProvider will store policies.\n\n        - Initial Admin Identity - The identity of an initial admin user that will be granted access to the UI and\n            given the ability to create additional users, groups, and policies. The value of this property could be\n            a DN when using certificates or LDAP. This property will only be used when there\n            are no other policies defined.\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the initial admin identity,\n            so the value should be the unmapped identity. This identity must be found in the configured User Group Provider.\n\n        - Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node\n            should be defined, so that every node knows about every other node. If not clustered these properties can be ignored.\n            The name of each property must be unique, for example for a three node cluster:\n            \"Node Identity A\", \"Node Identity B\", \"Node Identity C\" or \"Node Identity 1\", \"Node Identity 2\", \"Node Identity 3\"\n\n            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,\n            so the values should be the unmapped identities (i.e. full DN from a certificate). This identity must be found\n            in the configured User Group Provider.\n    -->\n    <accessPolicyProvider>\n        <identifier>file-access-policy-provider</identifier>\n        <class>org.apache.nifi.registry.security.authorization.file.FileAccessPolicyProvider</class>\n        <property name=\"User Group Provider\">file-user-group-provider</property>\n        <property name=\"Authorizations File\">{{nifi_registry_internal_config_dir}}/authorizations.xml</property>\n        <property name=\"Initial Admin Identity\">{{nifi_registry_initial_admin_id}}</property>\n        {{nifi_registry_ssl_config_content}}\n    </accessPolicyProvider>\n\n    <!--\n        The StandardManagedAuthorizer. This authorizer implementation must be configured with the\n        Access Policy Provider which it will use to access and manage users, groups, and policies.\n        These users, groups, and policies will be used to make all access decisions during authorization\n        requests.\n\n        - Access Policy Provider - The identifier for an Access Policy Provider defined above.\n    -->\n    <authorizer>\n        <identifier>managed-authorizer</identifier>\n        <class>org.apache.nifi.registry.security.authorization.StandardManagedAuthorizer</class>\n        <property name=\"Access Policy Provider\">file-access-policy-provider</property>\n    </authorizer>\n\n</authorizers>"
                }
            }
        },
        {
            "ranger-nifi-policymgr-ssl": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "zoo.cfg": {
                "properties_attributes": {},
                "properties": {
                    "autopurge.purgeInterval": "24",
                    "dataDir": "/hadoop/zookeeper",
                    "autopurge.snapRetainCount": "30",
                    "clientPort": "2181",
                    "initLimit": "10",
                    "tickTime": "3000",
                    "syncLimit": "5"
                }
            }
        },
        {
            "ams-hbase-site": {
                "properties_attributes": {
                    "final": {
                        "hbase.zookeeper.quorum": "true"
                    }
                },
                "properties": {
                    "hfile.block.cache.size": "0.3",
                    "phoenix.query.spoolThresholdBytes": "20971520",
                    "hbase.zookeeper.property.dataDir": "${hbase.tmp.dir}/zookeeper",
                    "hbase.regionserver.thread.compaction.large": "2",
                    "hbase.master.port": "61300",
                    "zookeeper.session.timeout.localHBaseCluster": "120000",
                    "phoenix.query.keepAliveMs": "300000",
                    "hbase.local.dir": "${hbase.tmp.dir}/local",
                    "phoenix.query.timeoutMs": "300000",
                    "hbase.regionserver.thread.compaction.small": "3",
                    "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
                    "hbase.client.scanner.timeout.period": "300000",
                    "hbase.regionserver.info.port": "61330",
                    "phoenix.query.rowKeyOrderSaltedTable": "true",
                    "phoenix.mutate.batchSize": "10000",
                    "zookeeper.znode.parent": "/ams-hbase-unsecure",
                    "hbase.master.info.port": "61310",
                    "hbase.rootdir": "file:///var/lib/ambari-metrics-collector/hbase",
                    "hbase.cluster.distributed": "false",
                    "hbase.hregion.majorcompaction": "0",
                    "hbase.hstore.flusher.count": "2",
                    "hbase.master.normalizer.class": "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
                    "hbase.snapshot.enabled": "false",
                    "phoenix.spool.directory": "${hbase.tmp.dir}/phoenix-spool",
                    "phoenix.coprocessor.maxMetaDataCacheSize": "20480000",
                    "hbase.zookeeper.property.tickTime": "6000",
                    "hbase.zookeeper.leaderport": "61388",
                    "phoenix.sequence.saltBuckets": "2",
                    "hbase.hstore.blockingStoreFiles": "200",
                    "zookeeper.session.timeout": "120000",
                    "phoenix.coprocessor.maxServerCacheTimeToLiveMs": "60000",
                    "hbase.master.info.bindAddress": "0.0.0.0",
                    "hbase.regionserver.global.memstore.lowerLimit": "0.3",
                    "dfs.client.read.shortcircuit": "true",
                    "phoenix.query.maxGlobalMemoryPercentage": "15",
                    "hbase.hregion.memstore.flush.size": "134217728",
                    "hbase.hregion.max.filesize": "4294967296",
                    "phoenix.groupby.maxCacheSize": "307200000",
                    "hbase.master.wait.on.regionservers.mintostart": "1",
                    "hbase.regionserver.global.memstore.upperLimit": "0.35",
                    "hbase.normalizer.period": "600000",
                    "hbase.tmp.dir": "/var/lib/ambari-metrics-collector/hbase-tmp",
                    "hbase.client.scanner.caching": "10000",
                    "hbase.replication": "false",
                    "hbase.unsafe.stream.capability.enforce": "false",
                    "hbase.rpc.timeout": "300000",
                    "hbase.superuser": "activity_explorer,activity_analyzer",
                    "hbase.zookeeper.peerport": "61288",
                    "hbase.regionserver.port": "61320",
                    "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
                    "hbase.hregion.memstore.block.multiplier": "4",
                    "hbase.normalizer.enabled": "false"
                }
            }
        },
        {
            "zookeeper-log4j": {
                "properties_attributes": {},
                "properties": {
                    "zookeeper_log_max_backup_size": "10",
                    "zookeeper_log_number_of_backup_files": "10",
                    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
                }
            }
        },
        {
            "infra-solr-client-log4j": {
                "properties_attributes": {},
                "properties": {
                    "infra_client_log_maxfilesize": "80",
                    "infra_client_log_maxbackupindex": "60",
                    "content": "# Copyright 2011 The Apache Software Foundation\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nlog4j.rootLogger=INFO,file,stdout,stderr\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{solr_client_log|default('/var/log/ambari-infra-solr-client/solr-client.log')}}\nlog4j.appender.file.MaxFileSize={{solr_client_log_maxfilesize}}MB\nlog4j.appender.file.MaxBackupIndex={{solr_client_log_maxbackupindex}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{DATE} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Threshold=INFO\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%m%n\nlog4j.appender.stdout.filter.lvlRangeFilter=org.apache.log4j.varia.LevelRangeFilter\nlog4j.appender.stdout.filter.lvlRangeFilter.LevelMax=WARN\n\nlog4j.appender.stderr=org.apache.log4j.ConsoleAppender\nlog4j.appender.stderr.Threshold=ERROR\nlog4j.appender.stderr.Target=System.err\nlog4j.appender.stderr.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stderr.layout.ConversionPattern=%m%n\nlog4j.appender.stderr.filter.lvlRangeFilter=org.apache.log4j.varia.LevelRangeFilter\nlog4j.appender.stderr.filter.lvlRangeFilter.LevelMin=ERROR",
                    "infra_solr_client_log_dir": "/var/log/ambari-infra-solr-client"
                }
            }
        },
        {
            "nifi-login-identity-providers-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <!--\n            This file lists the login identity providers to use when running securely. In order\n            to use a specific provider it must be configured here and it's identifier\n            must be specified in the nifi.properties file.\n            -->\n            <loginIdentityProviders>\n            <!--\n            Identity Provider for users logging in with username/password against an LDAP server.\n\n            'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, or START_TLS.\n\n            'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n            'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n            'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using START_TLS.\n            'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using START_TLS.\n            'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            START_TLS (i.e. JKS or PKCS12).\n            'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using START_TLS.\n            'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using START_TLS.\n            'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            START_TLS (i.e. JKS or PKCS12).\n            'TLS - Client Auth' - Client authentication policy when connecting to LDAP using START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n            'TLS - Protocol' - Protocol to use when connecting to LDAP using START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n            'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n            'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n            'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n            'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n            'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n            'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).\n            'User Search Filter' - Filter for searching for users against the 'User Search Base'.\n            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.\n\n            'Identity Strategy' - Strategy to identify users. Possible values are USE_DN and USE_USERNAME.\n            The default functionality if this property is missing is USE_DN in order to retain\n            backward compatibility. USE_DN will use the full DN of the user entry if possible.\n            USE_USERNAME will use the username the user logged in with.\n            'Authentication Expiration' - The duration of how long the user authentication is valid\n            for. If the user never logs out, they will be required to log back in following\n            this duration.\n            -->\n            <!-- To enable the ldap-provider remove 2 lines. This is 1 of 2.\n            <provider>\n            <identifier>ldap-provider</identifier>\n            <class>org.apache.nifi.ldap.LdapProvider</class>\n            <property name=\"Identity Strategy\">USE_DN</property>\n            <property name=\"Authentication Strategy\">START_TLS</property>\n            <property name=\"Manager DN\"></property>\n            <property name=\"Manager Password\"></property>\n            <property name=\"TLS - Keystore\"></property>\n            <property name=\"TLS - Keystore Password\"></property>\n            <property name=\"TLS - Keystore Type\"></property>\n            <property name=\"TLS - Truststore\"></property>\n            <property name=\"TLS - Truststore Password\"></property>\n            <property name=\"TLS - Truststore Type\"></property>\n            <property name=\"TLS - Client Auth\"></property>\n            <property name=\"TLS - Protocol\"></property>\n            <property name=\"TLS - Shutdown Gracefully\"></property>\n            <property name=\"Referral Strategy\">FOLLOW</property>\n            <property name=\"Connect Timeout\">10 secs</property>\n            <property name=\"Read Timeout\">10 secs</property>\n            <property name=\"Url\"></property>\n            <property name=\"User Search Base\"></property>\n            <property name=\"User Search Filter\"></property>\n            <property name=\"Identity Strategy\">USE_DN</property>\n            <property name=\"Authentication Expiration\">12 hours</property>\n            </provider>\n            To enable the ldap-provider remove 2 lines. This is 2 of 2. -->\n            <!--\n            Identity Provider for users logging in with username/password against a Kerberos KDC server.\n\n            'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).\n            'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.\n            -->\n            {% if not security_enabled %}\n            <!-- To enable the kerberos-provider remove 2 lines. This is 1 of 2.\n            {% endif %}\n            <provider>\n            <identifier>kerberos-provider</identifier>\n            <class>org.apache.nifi.kerberos.KerberosProvider</class>\n            <property name=\"Default Realm\">{{nifi_kerberos_realm}}</property>\n            <property name=\"Authentication Expiration\">{{nifi_kerberos_authentication_expiration}}</property>\n            </provider>\n            {% if not security_enabled %}\n            To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->\n            {% endif %}\n\n            </loginIdentityProviders>"
                }
            }
        },
        {
            "ranger-nifi-audit": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "nifi-bootstrap-notification-services-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <services>\n            <!-- This file is used to define how interested parties are notified when events in NiFi's lifecycle occur. -->\n            <!-- The format of this file is:\n            <services>\n            <service>\n            <id>service-identifier</id>\n            <class>org.apache.nifi.notifications.DesiredNotificationService</class>\n            <property name=\"property name\">property value</property>\n            <property name=\"another property\">another property value</property>\n            </service>\n            </services>\n\n            This file can contain 0 to many different service definitions.\n            The id can then be referenced from the bootstrap.conf file in order to configure the notification service\n            to be used when particular lifecycle events occur.\n            -->\n\n            <!--\n            <service>\n            <id>email-notification</id>\n            <class>org.apache.nifi.bootstrap.notification.email.EmailNotificationService</class>\n            <property name=\"SMTP Hostname\"></property>\n            <property name=\"SMTP Port\"></property>\n            <property name=\"SMTP Username\"></property>\n            <property name=\"SMTP Password\"></property>\n            <property name=\"SMTP TLS\"></property>\n            <property name=\"From\"></property>\n            <property name=\"To\"></property>\n            </service>\n            -->\n\n            <!--\n            <service>\n            <id>http-notification</id>\n            <class>org.apache.nifi.bootstrap.notification.http.HttpNotificationService</class>\n            <property name=\"URL\"></property>\n            </service>\n            -->\n            </services>"
                }
            }
        },
        {
            "activity-log4j": {
                "properties_attributes": {},
                "properties": {
                    "activity_max_file_size": "30",
                    "activity-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{activity_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{activity_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{activity_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n",
                    "activity_log_dir": "/var/log/smartsense-activity",
                    "activity_max_backup_index": "10"
                }
            }
        },
        {
            "infra-solr-security-json": {
                "properties_attributes": {},
                "properties": {
                    "infra_solr_ranger_audit_service_users": "{default_ranger_audit_users}",
                    "infra_solr_role_logfeeder": "logfeeder_user",
                    "infra_solr_role_ranger_audit": "ranger_audit_user",
                    "infra_solr_role_logsearch": "logsearch_user",
                    "infra_solr_role_dev": "dev",
                    "infra_solr_role_ranger_admin": "ranger_admin_user",
                    "infra_solr_role_atlas": "atlas_user",
                    "content": "",
                    "infra_solr_security_manually_managed": "false"
                }
            }
        },
        {
            "nifi-ambari-ssl-config": {
                "properties_attributes": {},
                "properties": {
                    "nifi.toolkit.dn.prefix": "CN=",
                    "nifi.toolkit.tls.helper.days": "1095",
                    "nifi.security.keystoreType": "",
                    "nifi.security.keystore": "{{nifi_config_dir}}/keystore.jks",
                    "nifi.node.ssl.isenabled": "false",
                    "content": "\n<!-- Provide the identity (typically a DN) of each node when clustered (see tool tip for detailed description of Node Identity). Must be specified when Ranger Nifi plugin will not be used for authorization. -->\n\n<!--\n<property name=\"Node Identity 1\"></property>\n<property name=\"Node Identity 2\"></property>\n<property name=\"Node Identity 3\"></property>\n<property name=\"Node Identity 4\"></property>\n-->",
                    "nifi.toolkit.tls.regenerate": "false",
                    "nifi.toolkit.dn.suffix": ", OU=NIFI",
                    "nifi.initial.admin.identity": "",
                    "nifi.security.truststore": "{{nifi_config_dir}}/truststore.jks",
                    "nifi.security.truststoreType": "",
                    "nifi.toolkit.tls.port": "10443"
                }
            }
        },
        {
            "hst-agent-conf": {
                "properties_attributes": {},
                "properties": {
                    "security.anonymization.max.heap": "2048",
                    "agent.tmp_dir": "/var/lib/smartsense/hst-agent/data/tmp",
                    "upload.retry_count": "100",
                    "server.connection_retry_interval": "10",
                    "agent.version": "1.5.0.2.7.0.0-897",
                    "upload.retry_interval": "15",
                    "agent.loglevel": "INFO",
                    "bundle.logs_to_capture": "(.*).log$,(.*).out$,(.*).err$",
                    "server.connection_retry_count": "100"
                }
            }
        },
        {
            "nifi-ambari-config": {
                "properties_attributes": {},
                "properties": {
                    "nifi.node.ssl.port": "9091",
                    "nifi.ambari_reporting_frequency": "1 mins",
                    "nifi.internal.dir": "/var/lib/nifi",
                    "nifi.max_mem": "20g",
                    "nifi.content.repository.dir.default": "/var/lib/nifi/content_repository",
                    "nifi.node.protocol.port": "9088",
                    "nifi.allow.explicit.keytab": "true",
                    "nifi.state.dir": "{nifi_internal_dir}/state/local",
                    "nifi.flow.config.dir": "{nifi_internal_dir}/conf",
                    "nifi.ambari_reporting_enabled": "true",
                    "nifi.config.dir": "{nifi_install_dir}/conf",
                    "nifi.initial_mem": "16g",
                    "nifi.node.port": "9090",
                    "nifi.flowfile.repository.dir": "/var/lib/nifi/flowfile_repository",
                    "nifi.nifi_znode": "/nifi",
                    "nifi.provenance.repository.dir.default": "/var/lib/nifi/provenance_repository",
                    "nifi.database.dir": "/var/lib/nifi/database_repository",
                    "nifi.security.encrypt.configuration.password" : "changemeplease"
                }
            }
        },
        {
            "nifi-authorizers-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n            <!--\n            This file lists the userGroupProviders, accessPolicyProviders, and authorizers to use when running securely. In order\n            to use a specific authorizer it must be configured here and it's identifier must be specified in the nifi.properties file.\n            If the authorizer is a managedAuthorizer, it may need to be configured with an accessPolicyProvider and an userGroupProvider.\n            This file allows for configuration of them, but they must be configured in order:\n\n            ...\n            all userGroupProviders\n            all accessPolicyProviders\n            all Authorizers\n            ...\n            -->\n\n            <authorizers>\n\n            {% if not (has_ranger_admin and enable_ranger_nifi) %}\n            <userGroupProvider>\n            <identifier>file-user-group-provider</identifier>\n            <class>org.apache.nifi.authorization.FileUserGroupProvider</class>\n            <property name=\"Users File\">{{nifi_flow_config_dir}}/users.xml</property>\n            <property name=\"Legacy Authorized Users File\"></property>\n            <property name=\"Initial User Identity 0\">{{nifi_initial_admin_id}}</property>\n            {{nifi_ssl_config_content | replace(\"Node\",\"Initial User\")}}\n            </userGroupProvider>\n\n            <accessPolicyProvider>\n            <identifier>file-access-policy-provider</identifier>\n            <class>org.apache.nifi.authorization.FileAccessPolicyProvider</class>\n            <property name=\"User Group Provider\">file-user-group-provider</property>\n            <property name=\"Authorizations File\">{{nifi_flow_config_dir}}/authorizations.xml</property>\n            <property name=\"Initial Admin Identity\">{{nifi_initial_admin_id}}</property>\n            <property name=\"Legacy Authorized Users File\"></property>\n            {{nifi_ssl_config_content}}\n            </accessPolicyProvider>\n\n            <authorizer>\n            <identifier>{{nifi_authorizer}}</identifier>\n            <class>org.apache.nifi.authorization.StandardManagedAuthorizer</class>\n            <property name=\"Access Policy Provider\">file-access-policy-provider</property>\n            </authorizer>\n            {% else %}\n\n            <authorizer>\n            <identifier>{{nifi_authorizer}}</identifier>\n            <class>org.apache.nifi.ranger.authorization.RangerNiFiAuthorizer</class>\n            <property name=\"Ranger Audit Config Path\">{{nifi_config_dir}}/ranger-nifi-audit.xml</property>\n            <property name=\"Ranger Security Config Path\">{{nifi_config_dir}}/ranger-nifi-security.xml</property>\n            <property name=\"Ranger Service Type\">nifi</property>\n            <property name=\"Ranger Application Id\">nifi</property>\n            <property name=\"Ranger Admin Identity\">{{ranger_admin_identity}}</property>\n            {% if security_enabled %}\n            <property name=\"Ranger Kerberos Enabled\">true</property>\n            {% else %}\n            <property name=\"Ranger Kerberos Enabled\">false</property>\n            {% endif %}\n            </authorizer>\n            {% endif %}\n\n            </authorizers>"
                }
            }
        },
        {
            "nifi-bootstrap-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Java command to use when running NiFi\njava=java\n\n# Username to use when running NiFi. This value will be ignored on Windows.\nrun.as={{nifi_user}}\n##run.as=root\n\n# Configure where NiFi's lib and conf directories live\nlib.dir={{nifi_install_dir}}/lib\nconf.dir={{nifi_config_dir}}\n\n# How long to wait after telling NiFi to shutdown before explicitly killing the Process\ngraceful.shutdown.seconds=20\n\n{% if security_enabled %}\njava.arg.0=-Djava.security.auth.login.config={{nifi_jaas_conf}}\n{% endif %}\n\n# Disable JSR 199 so that we can use JSP's without running a JDK\njava.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true\n\n# JVM memory settings\njava.arg.2=-Xms{{nifi_initial_mem}}\njava.arg.3=-Xmx{{nifi_max_mem}}\n\n# Enable Remote Debugging\n#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n\njava.arg.4=-Djava.net.preferIPv4Stack=true\n\n# allowRestrictedHeaders is required for Cluster/Node communications to work properly\njava.arg.5=-Dsun.net.http.allowRestrictedHeaders=true\njava.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol\n\n# The G1GC is still considered experimental but has proven to be very advantageous in providing great\n# performance without significant \"stop-the-world\" delays.\njava.arg.13=-XX:+UseG1GC\n\n#Set headless mode by default\njava.arg.14=-Djava.awt.headless=true\n\n#Ambari Metrics Collector URL - passed in to flow.xml for AmbariReportingTask\njava.arg.15=-Dambari.metrics.collector.url=http://{{metrics_collector_host}}:{{metrics_collector_port}}/ws/v1/timeline/metrics\n\n#Application ID - used in flow.xml - passed into flow.xml for AmbariReportingTask\njava.arg.16=-Dambari.application.id=nifi\n\n#Sets the provider of SecureRandom to /dev/urandom to prevent blocking on VMs\njava.arg.17=-Djava.security.egd=file:/dev/urandom\n\n# Requires JAAS to use only the provided JAAS configuration to authenticate a Subject, without using any \"fallback\" methods (such as prompting for username/password)\n# Please see https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/single-signon.html, section \"EXCEPTIONS TO THE MODEL\"\njava.arg.18=-Djavax.security.auth.useSubjectCredsOnly=true\n\n{% if security_enabled %}\n# Support custom ZK client principal\njava.arg.19=-Dzookeeper.sasl.client.username={{zookeeper_principal_primary}}\n{% endif %}\n\n###\n# Notification Services for notifying interested parties when NiFi is stopped, started, dies\n###\n\n# XML File that contains the definitions of the notification services\nnotification.services.file={{nifi_config_dir}}/bootstrap-notification-services.xml\n\n# In the case that we are unable to send a notification for an event, how many times should we retry?\nnotification.max.attempts=5\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is started?\n#nifi.start.notification.services=email-notification\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi is stopped?\n#nifi.stop.notification.services=email-notification\n\n# Comma-separated list of identifiers that are present in the notification.services.file; which services should be used to notify when NiFi dies?\n#nifi.dead.notification.services=email-notification"
                }
            }
        },
        {
            "infra-solr-log4j": {
                "properties_attributes": {},
                "properties": {
                    "infra_log_maxbackupindex": "9",
                    "infra_log_maxfilesize": "10",
                    "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#  Logging level\ninfra.solr.log.dir={{infra_solr_log_dir}}\n#log4j.rootLogger=INFO, file, CONSOLE\nlog4j.rootLogger=WARN, file\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%-4r [%t] %-5p %c %x [%X{collection} %X{shard} %X{replica} %X{core}] \\u2013 %m%n\n\n#- size rotation with log cleanup.\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.MaxFileSize={{infra_log_maxfilesize}}MB\nlog4j.appender.file.MaxBackupIndex={{infra_log_maxbackupindex}}\n\n#- File to log to and log format\nlog4j.appender.file.File=${infra.solr.log.dir}/solr.log\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\n\nlog4j.logger.org.apache.zookeeper=WARN\nlog4j.logger.org.apache.hadoop=WARN\n\n# set to INFO to enable infostream log messages\nlog4j.logger.org.apache.solr.update.LoggingInfoStream=OFF"
                }
            }
        },
        {
            "ranger-nifi-plugin-properties": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "anonymization-rules": {
                "properties_attributes": {},
                "properties": {
                    "anonymization-rules-content": "{\n  \"rules\":[\n    {\n      \"name\": \"IP Address\",\n      \"description\": \"Anonymize IP addresses like 123.123.12.34 from all non-binary files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?![\\\\-])((?<![a-z0-9\\\\.])[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}(?!\\\\.[0-9])(?![a-z0-9]))\"],\n      \"exclude_files\": [\"hdp-select*.*\", \"*version.txt\"]\n    },\n    {\n      \"name\": \"Domain Names\",\n      \"rule_id\": \"Domain\"\n    },\n    {\n      \"name\": \"File Names\",\n      \"rule_id\": \"FileName\",\n      \"description\": \"Anonymize file names that have domain names and/or ip addresses\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"SSN\",\n      \"description\": \"Anonymize social security numbers in format xxx-xx-xxxx from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])([0-9x]{3}-[0-9x]{2}-[0-9]{4})(?![0-9x])\"],\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log*\", \"hst.out*\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Credit Card Numbers\",\n      \"description\": \"Anonymize credit card numbers from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])(18|21|3[04678]|4[0-9x]|5[1-5]|60|65)[0-9x]{2}[- ]([0-9x]{4}[- ]){2}[0-9]{0,4}(?![0-9x])\"],\n      \"extract\": \"(?<![0-9x])([0-9x -]+)(?![0-9x])\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log.*\", \"hst.out\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"email\",\n      \"description\": \"Anonymize based on standard email pattern from all files except metadata.json which is used by SmartSense to send bundle notifications\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![a-z0-9._%+-])[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,6}(?![a-z0-9._%+-])$?\"],\n      \"exclude_files\" : [\"metadata.json\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"Core Site S3 Credentials\",\n      \"description\": \"Anonymize the value of properties from core-site.xml that might contain S3 credentials\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\"fs.s3a.session.token\",\"fs.s3a.proxy.host\",\"fs.s3a.proxy.username\"],\n      \"include_files\": [\"core-site.xml\"],\n      \"action\" : \"REPLACE\",\n      \"replace_value\": \"Hidden\"\n    },\n    {\n      \"name\": \"Password Configurations\",\n      \"description\": \"Anonymize various password related properties from configuration files. Properties and configuration files are listed below\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\".*password.*\", \".*awsAccessKeyId.*\",  \".*awsSecretAccessKey.*\", \"fs.azure.account.key.*\", \"ranger.service.https.attrib.keystore.pass\",\"https.attrib.keystorePass\", \"HTTPS_KEYSTORE_PASS\"],\n      \"include_files\": [\"*.xml\", \"*.properties\", \"*.yaml\", \"*.ini\", \"*.json\"],\n      \"exclude_files\" : [\"capacity-scheduler.xml\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"KNOX LDAP Password\",\n      \"description\": \"Anonymize KNOX LDAP passwords from topology configurations xml\",\n      \"rule_id\": \"XPATH\",\n      \"paths\": [\"//name[contains(text(),'Password')]/following-sibling::value[1]/text()\"],\n      \"include_files\": [\"topologies/*.xml\"],\n      \"parentNode\": \"param\",\n      \"shared\": false\n    },\n    {\n      \"name\": \"Ranger KMS Oozie Ganglia Falcon Passwords\",\n      \"description\": \"Anomymize various password related properties for multiple services. Properties are listed below\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"oozie.https.keystore.pass=([^\\\\s]*)\", \"OOZIE_HTTPS_KEYSTORE_PASS=([^\\\\s]*)\", \"ganglia_password=([^\\\\s]*)\", \"javax.jdo.option.ConnectionPassword=([^\\\\s]*)\",\"KMS_SSL_KEYSTORE_PASS=([^\\\\s]*)\",\"falcon.statestore.jdbc.password=([^\\\\s]*)\"],\n      \"extract\": \"=([^\\\\s]*)\",\n      \"include_files\": [\"java_process.txt\", \"pid.txt\", \"ambari-agent.log\", \"oozie-env.cmd\", \"hive_set_v.txt\", \"beeline_set_v.txt\", \"process_list.txt\", \"kms-env.sh\", \"statestore.credentials\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"MAC Addresses\",\n      \"description\": \"Anonymize MAC addresses like ab:12:3c:44:5d:6e from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(([0-9a-f]{2}[:-]){5}[0-9a-f]{2})\"],\n      \"extract\": \"([0-9a-f:-]{17})\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\": true\n    },\n    {\n      \"name\":\"IPv6 Addresses\",\n      \"description\":\"Anonymize IPv6 addresses like inet6 ab10::g457:6xxx:xxxx:6c9b/64 from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"inet6 addr:\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\"],\n      \"extract\": \":\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\":true\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.['hive.password','phoenix.password','default.password','spark2.password','spark.password','psql.password','hive_interactive.password']\"],\n      \"include_files\": [\"interpreter.json\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.*[?(@.name=~/.*password.*/i)].value\"],\n      \"include_files\": [\"interpreter.json\"],\n     \"shared\": false\n    }\n  ]\n}"
                }
            }
        },
        {
            "ranger-nifi-security": {
                "properties_attributes": {},
                "properties": {}
            }
        },
        {
            "nifi-flow-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n<flowController>\n  <maxTimerDrivenThreadCount>10</maxTimerDrivenThreadCount>\n  <maxEventDrivenThreadCount>5</maxEventDrivenThreadCount>\n  <rootGroup>\n    <id>7c84501d-d10c-407c-b9f3-1d80e38fe36a</id>\n    <name>NiFi Flow</name>\n    <position x=\"0.0\" y=\"0.0\"/>\n    <comment/>\n  </rootGroup>\n  <controllerServices/>\n  <reportingTasks>\n    <reportingTask>\n      <id>3b80ba0f-a6c0-48db-b721-4dbc04cef28e</id>\n      <name>AmbariReportingTask</name>\n      <comment/>\n      <class>org.apache.nifi.reporting.ambari.AmbariReportingTask</class>\n      <schedulingPeriod>{{nifi_ambari_reporting_frequency}}</schedulingPeriod>\n      <scheduledState>RUNNING</scheduledState>\n      <schedulingStrategy>TIMER_DRIVEN</schedulingStrategy>\n      <property>\n        <name>Metrics Collector URL</name>\n        <value>${ambari.metrics.collector.url}</value>\n      </property>\n      <property>\n        <name>Application ID</name>\n        <value>${ambari.application.id}</value>\n      </property>\n      <property>\n        <name>Hostname</name>\n        <value>${hostname(true)}</value>\n      </property>\n    </reportingTask>\n  </reportingTasks>\n</flowController>"
                }
            }
        },
        {
            "nifi-jaas-conf": {
                "properties_attributes": {},
                "properties": {
                    "content": "\nNiFiClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{nifi_service_keytab}}\"\n    storeKey=true\n    useTicketCache=false\n    principal=\"{{nifi_service_principal}}\";\n};\nRegistryClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{nifi_service_keytab}}\"\n    storeKey=true\n    useTicketCache=false\n    principal=\"{{nifi_service_principal}}\";\n};"
                }
            }
        },
        {
            "activity-env": {
                "properties_attributes": {},
                "properties": {
                    "analyzer_jvm_heap": "8192",
                    "analyzer_jvm_opts": "-Xms128m",
                    "activity-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Enable verbose shell execution\n#set -xv\n\n## Set HOME for various components\nexport HADOOP_HOME=/usr/hdp/current/hadoop-client\nexport HDFS_HOME=/usr/hdp/current/hadoop-hdfs-client\nexport MAPREDUCE_HOME=/usr/hdp/current/hadoop-mapreduce-client\nexport YARN_HOME=/usr/hdp/current/hadoop-yarn-client\nexport HIVE_HOME=/usr/hdp/current/hive-client\nexport HCAT_HOME=/usr/hdp/current/hive-webhcat\nexport TEZ_HOME=/usr/hdp/current/tez-client\nexport HBASE_HOME=/usr/hdp/current/hbase-client\nexport PHOENIX_HOME=/usr/hdp/current/phoenix-client\nexport ACTIVITY_ANALYZER_HOME=/usr/hdp/share/hst/activity-analyzer\nexport AMS_COLLECTOR_HOME=/usr/lib/ambari-metrics-collector\nexport JAVA_HOME={{java_home}}\n\n## Set conf dir for various components\nexport HADOOP_CONF_DIR=/etc/hadoop/conf/\nexport HIVE_CONF_DIR=/etc/hive/conf/\nexport HBASE_CONF_DIR=/etc/hbase/conf/\nexport TEZ_CONF_DIR=/etc/tez/conf/\nexport ACTIVITY_ANALYZER_CONF_DIR=/etc/smartsense-activity/conf/\nexport AMS_HBASE_CONF=/etc/ams-hbase/conf\n\nexport DEBUG_ENABLED=false\n\n## Set JVM related configs\nexport ANALYZER_JAVA_OPTS=\"{{analyzer_jvm_opts}} -Xmx{{analyzer_jvm_heap}}m\""
                }
            }
        },
        {
            "activity-zeppelin-env": {
                "properties_attributes": {},
                "properties": {
                    "activity-zeppelin-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n\nexport JAVA_HOME={{java_home}}\n# Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\"\nexport ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{hdp_version}} -Dlog.file.name=activity-explorer.log -DSmartSenseActivityExplorer\"      \t\t\n# export ZEPPELIN_INTP_MEM       \t\t# zeppelin interpreter process jvm mem options. Default = ZEPPELIN_MEM\n# export ZEPPELIN_INTP_JAVA_OPTS \t\t# zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS\n\nexport RUN_AS_USER={{run_as_user}}\nexport ZEPPELIN_MEM=\" -Xms256m -Xmx1024m -XX:MaxPermSize=256m\"\nexport ZEPPELIN_LOG_DIR={{activity_log_dir}}\nexport ZEPPELIN_PID_DIR=/var/run/smartsense-activity-explorer\nexport ZEPPELIN_WAR_TEMPDIR=/var/lib/smartsense/activity-explorer/webapp\nexport ZEPPELIN_NOTEBOOK_DIR=/var/lib/smartsense/activity-explorer/notebook\nexport ZEPPELIN_CLASSPATH=\"/etc/ams-hbase/conf:${ZEPPELIN_CLASSPATH}\"\nexport CLASSPATH=${ZEPPELIN_CLASSPATH}"
                }
            }
        },
        {
            "activity-zeppelin-shiro": {
                "properties_attributes": {},
                "properties": {
                    "main.iniRealm.credentialsMatcher": "$credentialMatcher",
                    "main.credentialMatcher": "org.apache.shiro.authc.credential.PasswordMatcher",
                    "main.securityManager.sessionManager": "$sessionManager",
                    "main.securityManager.sessionManager.globalSessionTimeout": "86400000",
                    "main.sessionManager": "org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
                }
            }
        },
        {
            "ams-hbase-security-site": {
                "properties_attributes": {},
                "properties": {
                    "hbase.coprocessor.master.classes": "",
                    "hbase.myclient.keytab": "",
                    "hadoop.security.authentication": "",
                    "ams.zookeeper.keytab": "",
                    "hbase.zookeeper.property.jaasLoginRenew": "",
                    "hbase.regionserver.keytab.file": "",
                    "hbase.zookeeper.property.authProvider.1": "",
                    "hbase.zookeeper.property.kerberos.removeHostFromPrincipal": "",
                    "hbase.coprocessor.region.classes": "",
                    "hbase.security.authentication": "",
                    "hbase.master.keytab.file": "",
                    "hbase.security.authorization": "",
                    "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal": ""
                }
            }
        },
        {
            "hst-server-conf": {
                "properties_attributes": {},
                "properties": {
                    "customer.account.name": "unspecified",
                    "server.ssl_enabled": "false",
                    "agent.request.processing.timeout": "7200",
                    "client.threadpool.size.max": "40",
                    "server.max.heap": "2048",
                    "server.storage.dir": "/var/lib/smartsense/hst-server/data",
                    "customer.enable.flex.subscription": "false",
                    "gateway.registration.port": "9450",
                    "gateway.port": "9451",
                    "customer.flex.subscription.id": "",
                    "customer.notification.email": "unspecified",
                    "agent.request.syncup.interval": "180",
                    "gateway.host": "embedded",
                    "server.port": "9000",
                    "server.tmp.dir": "/var/lib/smartsense/hst-server/tmp",
                    "server.url": "http://ip-10-15-20-152.ec2.internal:9000",
                    "customer.smartsense.id": "unspecified"
                }
            }
        },
        {
            "nifi-registry-ambari-config": {
                "properties_attributes": {},
                "properties": {
                    "nifi.registry.database.dir": "{nifi_registry_internal_dir}/database",
                    "nifi.registry.port.ssl": "61443",
                    "nifi.registry.initial_mem": "512m",
                    "nifi.registry.max_mem": "512m",
                    "nifi.registry.internal.config.dir": "{nifi_registry_internal_dir}/conf",
                    "nifi.registry.port": "61080",
                    "nifi.registry.internal.dir": "/var/lib/nifi-registry",
                    "nifi.registry.config.dir": "{nifi_registry_install_dir}/conf",
                    "nifi.registry.security.encrypt.configuration.password": "changemeplease"
                }
            }
        },
        {
            "nifi-registry-ambari-ssl-config": {
                "properties_attributes": {},
                "properties": {
                    "nifi.registry.security.keystore": "{{nifi_registry_config_dir}}/keystore.jks",
                    "nifi.registry.security.needClientAuth": "false",
                    "nifi.registry.security.truststore": "{{nifi_registry_config_dir}}/truststore.jks",
                    "nifi.registry.security.keystoreType": "",
                    "nifi.registry.security.truststoreType": "",
                    "nifi.toolkit.tls.regenerate": "false",
                    "nifi.registry.ssl.isenabled": "false",
                    "nifi.registry.initial.admin.identity": "",
                    "content": "\n            <!-- Provide the identity (typically a DN) of NiFi nodes. -->\n\n            <!--\n            <property name=\"NiFi Identity 1\"></property>\n            <property name=\"NiFi Identity 2\"></property>\n            <property name=\"NiFi Identity 3\"></property>\n            <property name=\"NiFi Identity 4\"></property>\n            -->"
                }
            }
        },
        {
            "infra-solr-env": {
                "properties_attributes": {},
                "properties": {
                    "infra_solr_java_stack_size": "1",
                    "infra_solr_keystore_location": "/etc/security/serverKeys/infra.solr.keyStore.jks",
                    "infra_solr_truststore_type": "jks",
                    "infra_solr_user_nofile_limit": "128000",
                    "infra_solr_zookeeper_external_principal": "zookeeper/_HOST@EXAMPLE.COM",
                    "infra_solr_datadir": "/var/lib/ambari-infra-solr/data",
                    "content": "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# By default the script will use JAVA_HOME to determine which java\n# to use, but you can set a specific path for Solr to use without\n# affecting other Java applications on your server/workstation.\nSOLR_JAVA_HOME={{java64_home}}\n\n# Increase Java Min/Max Heap as needed to support your indexing / query needs\nSOLR_JAVA_MEM=\"-Xms{{infra_solr_min_mem}}m -Xmx{{infra_solr_max_mem}}m\"\n\nSOLR_JAVA_STACK_SIZE=\"-Xss{{infra_solr_java_stack_size}}m\"\n\nGC_LOG_OPTS=\"{{infra_solr_gc_log_opts}}\"\n\nGC_TUNE=\"{{infra_solr_gc_tune}}\"\n\n# Set the ZooKeeper connection string if using an external ZooKeeper ensemble\n# e.g. host1:2181,host2:2181/chroot\n# Leave empty if not using SolrCloud\nZK_HOST=\"{{zookeeper_quorum}}{{infra_solr_znode}}\"\n\n# Set the ZooKeeper client timeout (for SolrCloud mode)\nZK_CLIENT_TIMEOUT=\"60000\"\n\n# By default the start script uses \"localhost\"; override the hostname here\n# for production SolrCloud environments to control the hostname exposed to cluster state\nSOLR_HOST=`hostname -f`\n\n# By default the start script uses UTC; override the timezone if needed\n#SOLR_TIMEZONE=\"UTC\"\n\n# Set to true to activate the JMX RMI connector to allow remote JMX client applications\n# to monitor the JVM hosting Solr; set to \"false\" to disable that behavior\n# (false is recommended in production environments)\nENABLE_REMOTE_JMX_OPTS=\"{{infra_solr_jmx_enabled}}\"\n\n# The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here\nRMI_PORT={{infra_solr_jmx_port}}\n\n# Anything you add to the SOLR_OPTS variable will be included in the java\n# start command line as-is, in ADDITION to other options. If you specify the\n# -a option on start script, those options will be appended as well. Examples:\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.clustering.enabled=true\"\nSOLR_OPTS=\"$SOLR_OPTS -Djava.rmi.server.hostname={{hostname}}\"\n{% if infra_solr_extra_java_opts -%}\nSOLR_OPTS=\"$SOLR_OPTS {{infra_solr_extra_java_opts}}\"\n{% endif %}\n\n# Location where the bin/solr script will save PID files for running instances\n# If not set, the script will create PID files in $SOLR_TIP/bin\nSOLR_PID_DIR={{infra_solr_piddir}}\n\n# Path to a directory where Solr creates index files, the specified directory\n# must contain a solr.xml; by default, Solr will use server/solr\nSOLR_HOME={{infra_solr_datadir}}\n\n# Solr provides a default Log4J configuration properties file in server/resources\n# however, you may want to customize the log settings and file appender location\n# so you can point the script to use a different log4j.properties file\nLOG4J_PROPS={{infra_solr_conf}}/log4j.properties\n\n# Location where Solr should write logs to; should agree with the file appender\n# settings in server/resources/log4j.properties\nSOLR_LOGS_DIR={{infra_solr_log_dir}}\n\n# Sets the port Solr binds to, default is 8983\nSOLR_PORT={{infra_solr_port}}\n\n# Be sure to update the paths to the correct keystore for your environment\n{% if infra_solr_ssl_enabled %}\nSOLR_SSL_KEY_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_KEY_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_TRUST_STORE={{infra_solr_truststore_location}}\nSOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_truststore_password}}\nSOLR_SSL_NEED_CLIENT_AUTH=false\nSOLR_SSL_WANT_CLIENT_AUTH=false\n{% endif %}\n\n# Uncomment to set a specific SSL port (-Djetty.ssl.port=N); if not set\n# and you are using SSL, then the start script will use SOLR_PORT for the SSL port\n#SOLR_SSL_PORT=\n\n{% if security_enabled -%}\nSOLR_JAAS_FILE={{infra_solr_jaas_file}}\nSOLR_KERB_KEYTAB={{infra_solr_web_kerberos_keytab}}\nSOLR_KERB_PRINCIPAL={{infra_solr_web_kerberos_principal}}\nSOLR_OPTS=\"$SOLR_OPTS -Dsolr.hdfs.security.kerberos.principal={{infra_solr_kerberos_principal}}\"\nSOLR_OPTS=\"$SOLR_OPTS {{zk_security_opts}}\"\n\nSOLR_AUTH_TYPE=\"kerberos\"\nSOLR_AUTHENTICATION_OPTS=\" -DauthenticationPlugin=org.apache.solr.security.KerberosPlugin -Djava.security.auth.login.config=$SOLR_JAAS_FILE -Dsolr.kerberos.principal=${SOLR_KERB_PRINCIPAL} -Dsolr.kerberos.keytab=${SOLR_KERB_KEYTAB} -Dsolr.kerberos.cookie.domain=${SOLR_HOST}\"\n{% endif %}",
                    "infra_solr_minmem": "1024",
                    "infra_solr_pid_dir": "/var/run/ambari-infra-solr",
                    "infra_solr_user_nproc_limit": "65536",
                    "infra_solr_znode": "/infra-solr",
                    "infra_solr_jmx_enabled": "false",
                    "infra_solr_keystore_type": "jks",
                    "infra_solr_gc_log_opts": "-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime",
                    "infra_solr_kerberos_keytab": "/etc/security/keytabs/infra_solr.service.keytab",
                    "infra_solr_gc_tune": "-XX:NewRatio=3 -XX:SurvivorRatio=4 -XX:TargetSurvivorRatio=90 -XX:MaxTenuringThreshold=8 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 -XX:+CMSScavengeBeforeRemark -XX:PretenureSizeThreshold=64m -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=50 -XX:CMSMaxAbortablePrecleanTime=6000 -XX:+CMSParallelRemarkEnabled -XX:+ParallelRefProcEnabled",
                    "infra_solr_zookeeper_external_enabled": "false",
                    "infra_solr_web_kerberos_keytab": "/etc/security/keytabs/spnego.service.keytab",
                    "infra_solr_user": "infra-solr",
                    "infra_solr_log_dir": "/var/log/ambari-infra-solr",
                    "infra_solr_jmx_port": "18886",
                    "infra_solr_maxmem": "2048",
                    "infra_solr_kerberos_name_rules": "DEFAULT",
                    "infra_solr_port": "8886",
                    "infra_solr_extra_java_opts": "",
                    "infra_solr_ssl_enabled": "false",
                    "infra_solr_zookeeper_quorum": "{zookeeper_quorum}",
                    "infra_solr_truststore_location": "/etc/security/serverKeys/infra.solr.trustStore.jks"
                }
            }
        },
        {
            "nifi-registry-bootstrap-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Java command to use when running nifi-registry\njava=java\n\n# Username to use when running nifi-registry. This value will be ignored on Windows.\nrun.as={{nifi_registry_user}}\n\n# Configure where nifi-registry's lib and conf directories live\nlib.dir={{nifi_registry_install_dir}}/lib\nconf.dir={{nifi_registry_config_dir}}\n\n# How long to wait after telling nifi-registry to shutdown before explicitly killing the Process\ngraceful.shutdown.seconds=20\n\n# Disable JSR 199 so that we can use JSP's without running a JDK\njava.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true\n\n# JVM memory settings\njava.arg.2=-Xms{{nifi_registry_initial_mem}}\njava.arg.3=-Xmx{{nifi_registry_max_mem}}\n\n# Enable Remote Debugging\n#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n\njava.arg.4=-Djava.net.preferIPv4Stack=true\n\n# allowRestrictedHeaders is required for Cluster/Node communications to work properly\njava.arg.5=-Dsun.net.http.allowRestrictedHeaders=true\njava.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol"
                }
            }
        },
        {
            "ams-env": {
                "properties_attributes": {},
                "properties": {
                    "timeline.metrics.skip.disk.metrics.patterns": "true",
                    "metrics_collector_heapsize": "512",
                    "min_ambari_metrics_hadoop_sink_version": "2.7.0.0",
                    "failover_strategy_blacklisted_interval": "300",
                    "metrics_collector_pid_dir": "/var/run/ambari-metrics-collector",
                    "metrics_collector_log_dir": "/var/log/ambari-metrics-collector",
                    "metrics_monitor_pid_dir": "/var/run/ambari-metrics-monitor",
                    "ams_classpath_additional": "",
                    "content": "\n# Set environment variables here.\n\n# AMS instance name\nexport AMS_INSTANCE_NAME={{hostname}}\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase Tables Initialization check enabled\nexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"\n\n# Metrics collector host will be blacklisted for specified number of seconds if metric monitor failed to connect to it.\nexport AMS_FAILOVER_STRATEGY_BLACKLISTED_INTERVAL={{failover_strategy_blacklisted_interval}}\n\n# Extra Java CLASSPATH elements for Metrics Collector. Optional.\nexport COLLECTOR_ADDITIONAL_CLASSPATH={{ams_classpath_additional}}",
                    "timeline.metrics.skip.network.interfaces.patterns": "None",
                    "ambari_metrics_user": "ams",
                    "metrics_monitor_log_dir": "/var/log/ambari-metrics-monitor",
                    "timeline.metrics.host.inmemory.aggregation.jvm.arguments": "-Xmx256m -Xms128m -XX:PermSize=68m",
                    "timeline.metrics.skip.virtual.interfaces": "false"
                }
            }
        },
        {
            "nifi-registry-providers-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<providers>\n    <flowPersistenceProvider>\n        <class>org.apache.nifi.registry.provider.flow.FileSystemFlowPersistenceProvider</class>\n        <property name=\"Flow Storage Directory\">{{nifi_registry_internal_dir}}/flow_storage</property>\n    </flowPersistenceProvider>\n\n    <!--\n    <flowPersistenceProvider>\n        <class>org.apache.nifi.registry.provider.flow.git.GitFlowPersistenceProvider</class>\n        <property name=\"Flow Storage Directory\">./flow_storage</property>\n        <property name=\"Remote To Push\"></property>\n        <property name=\"Remote Access User\"></property>\n        <property name=\"Remote Access Password\"></property>\n    </flowPersistenceProvider>\n    -->\n\n    <!--\n    <eventHookProvider>\n        <class>org.apache.nifi.registry.provider.hook.ScriptEventHookProvider</class>\n        <property name=\"Script Path\"></property>\n        <property name=\"Working Directory\"></property>\n    </eventHookProvider>\n    -->\n\n    <!-- This will log all events to a separate file specified by the EVENT_APPENDER in logback.xml -->\n    <!--\n    <eventHookProvider>\n        <class>org.apache.nifi.registry.provider.hook.LoggingEventHookProvider</class>\n    </eventHookProvider>\n    -->\n\n</providers>"
                }
            }
        },
        {
            "hst-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hst_max_backup_index": "10",
                    "hst_max_file_size": "30",
                    "hst-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{hst_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.analytics=org.apache.log4j.RollingFileAppender\nlog4j.appender.analytics.File={{hst_log_dir}}/analytics.log\nlog4j.appender.analytics.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.analytics.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.analytics.layout=org.apache.log4j.PatternLayout\nlog4j.appender.analytics.layout.ConversionPattern=%m%n\n\n# HST logger\nlog4j.logger.com.hortonworks=INFO\ncom.github.oxo42.stateless4j=WARN\nlog4j.logger.com.sun.jersey=WARN\nlog4j.logger.org.eclipse.jetty.server=INFO\n\n# Analytics logger\nlog4j.logger.analytics=INFO,analytics\nlog4j.additivity.analytics=false",
                    "hst_log_dir": "/var/log/hst"
                }
            }
        },
        {
            "nifi-registry-properties": {
                "properties_attributes": {},
                "properties": {
                    "nifi.registry.kerberos.spnego.principal": "",
                    "nifi.registry.security.truststore": "{{nifi_registry_truststore}}",
                    "nifi.registry.db.url": "jdbc:h2:{{nifi_registry_database_dir}}/nifi-registry-primary;AUTOCOMMIT=OFF;DB_CLOSE_ON_EXIT=FALSE;LOCK_MODE=3;LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE",
                    "nifi.registry.security.authorizers.configuration.file": "{{nifi_registry_config_dir}}/authorizers.xml",
                    "nifi.registry.security.identity.mapping.value.kerb": "",
                    "nifi.registry.extension.dir.2": "",
                    "nifi.registry.security.identity.provider": "",
                    "nifi.registry.db.driver.class": "org.h2.Driver",
                    "nifi.registry.extension.dir.1": "",
                    "nifi.registry.security.keystore": "{{nifi_registry_keystore}}",
                    "nifi.registry.security.needClientAuth": "{{nifi_registry_needClientAuth}}",
                    "nifi.registry.security.identity.mapping.pattern.kerb": "",
                    "nifi.registry.db.directory": "{{nifi_registry_database_dir}}",
                    "nifi.registry.sensitive.props.additional.keys": "nifi.registry.db.password",
                    "nifi.registry.db.driver.directory": "",
                    "nifi.registry.security.identity.providers.configuration.file": "{{nifi_registry_config_dir}}/identity-providers.xml",
                    "nifi.registry.web.jetty.threads": "200",
                    "nifi.registry.db.username": "nifireg",
                    "nifi.registry.security.identity.mapping.value.dn": "",
                    "nifi.registry.web.http.host": "{{nifi_registry_nonssl_host}}",
                    "nifi.registry.providers.configuration.file": "{{nifi_registry_config_dir}}/providers.xml",
                    "nifi.registry.kerberos.spnego.authentication.expiration": "12 hours",
                    "nifi.registry.web.http.port": "{{nifi_registry_port}}",
                    "nifi.registry.security.keyPasswd": "{{nifi_registry_keyPasswd}}",
                    "nifi.registry.web.https.host": "{{nifi_registry_ssl_host}}",
                    "nifi.registry.security.authorizer": "{{nifi_registry_authorizer}}",
                    "nifi.registry.security.identity.mapping.pattern.dn": "",
                    "nifi.registry.security.truststorePasswd": "{{nifi_registry_truststorePasswd}}",
                    "nifi.registry.db.maxConnections": "5",
                    "nifi.registry.db.url.append": ";LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE",
                    "nifi.registry.kerberos.spnego.keytab.location": "",
                    "nifi.registry.security.keystoreType": "{{nifi_registry_keystoreType}}",
                    "nifi.registry.security.truststoreType": "{{nifi_registry_truststoreType}}",
                    "nifi.registry.db.sql.debug": "false",
                    "nifi.registry.security.keystorePasswd": "{{nifi_registry_keystorePasswd}}",
                    "nifi.registry.web.jetty.working.directory": "{{nifi_registry_internal_dir}}/work/jetty",
                    "nifi.registry.kerberos.krb5.file": "",
                    "nifi.registry.web.https.port": "{{nifi_registry_ssl_port}}",
                    "nifi.registry.web.war.directory": "{{nifi_registry_install_dir}}/lib",
                    "nifi.registry.db.password": "changemeplease"
                }
            }
        },
        {
            "nifi-registry-identity-providers-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n<!--\n    This file lists the login identity providers to use when running securely. In order\n    to use a specific provider it must be configured here and it's identifier\n    must be specified in the nifi.properties file.\n-->\n<identityProviders>\n    <!--\n        Identity Provider for users logging in with username/password against an LDAP server.\n\n        'Authentication Strategy' - How the connection to the LDAP server is authenticated. Possible\n            values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.\n\n        'Manager DN' - The DN of the manager that is used to bind to the LDAP server to search for users.\n        'Manager Password' - The password of the manager that is used to bind to the LDAP server to\n            search for users.\n\n        'TLS - Keystore' - Path to the Keystore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Keystore Password' - Password for the Keystore that is used when connecting to LDAP\n            using LDAPS or START_TLS.\n        'TLS - Keystore Type' - Type of the Keystore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Truststore' - Path to the Truststore that is used when connecting to LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Password' - Password for the Truststore that is used when connecting to\n            LDAP using LDAPS or START_TLS.\n        'TLS - Truststore Type' - Type of the Truststore that is used when connecting to LDAP using\n            LDAPS or START_TLS (i.e. JKS or PKCS12).\n        'TLS - Client Auth' - Client authentication policy when connecting to LDAP using LDAPS or START_TLS.\n            Possible values are REQUIRED, WANT, NONE.\n        'TLS - Protocol' - Protocol to use when connecting to LDAP using LDAPS or START_TLS. (i.e. TLS,\n            TLSv1.1, TLSv1.2, etc).\n        'TLS - Shutdown Gracefully' - Specifies whether the TLS should be shut down gracefully\n            before the target context is closed. Defaults to false.\n\n        'Referral Strategy' - Strategy for handling referrals. Possible values are FOLLOW, IGNORE, THROW.\n        'Connect Timeout' - Duration of connect timeout. (i.e. 10 secs).\n        'Read Timeout' - Duration of read timeout. (i.e. 10 secs).\n\n        'Url' - Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).\n        'User Search Base' - Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).\n        'User Search Filter' - Filter for searching for users against the 'User Search Base'.\n            (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.\n\n        'Identity Strategy' - Strategy to identify users. Possible values are USE_DN and USE_USERNAME.\n            The default functionality if this property is missing is USE_DN in order to retain\n            backward compatibility. USE_DN will use the full DN of the user entry if possible.\n            USE_USERNAME will use the username the user logged in with.\n        'Authentication Expiration' - The duration of how long the user authentication is valid\n            for. If the user never logs out, they will be required to log back in following\n            this duration.\n    -->\n    <!-- To enable the ldap-identity-provider remove 2 lines. This is 1 of 2.\n    <provider>\n        <identifier>ldap-provider</identifier>\n        <class>org.apache.nifi.registry.security.ldap.LdapIdentityProvider</class>\n        <property name=\"Authentication Strategy\">SIMPLE</property>\n\n        <property name=\"Manager DN\">cn=read-only-admin,dc=example,dc=com</property>\n        <property name=\"Manager Password\">password</property>\n\n        <property name=\"Referral Strategy\">FOLLOW</property>\n        <property name=\"Connect Timeout\">10 secs</property>\n        <property name=\"Read Timeout\">10 secs</property>\n\n        <property name=\"Url\">ldap://localhost:8389</property>\n        <property name=\"User Search Base\">dc=example,dc=com</property>\n        <property name=\"User Search Filter\">(uid={0})</property>\n\n        <property name=\"Identity Strategy\">USE_DN</property>\n\n        <property name=\"Authentication Expiration\">12 hours</property>\n    </provider>\n    To enable the ldap-identity-provider remove 2 lines. This is 2 of 2. -->\n\n    <!--\n    Identity Provider for users logging in with username/password against a Kerberos KDC server.\n\n    'Default Realm' - Default realm to provide when user enters incomplete user principal (i.e. NIFI.APACHE.ORG).\n    'Authentication Expiration' - The duration of how long the user authentication is valid for. If the user never logs out, they will be required to log back in following this duration.\n    -->\n    {% if not security_enabled %}\n    <!-- To enable the kerberos-identity-provider remove 2 lines. This is 1 of 2.\n    {% endif %}\n    <provider>\n        <identifier>kerberos-identity-provider</identifier>\n        <class>org.apache.nifi.registry.web.security.authentication.kerberos.KerberosIdentityProvider</class>\n        <property name=\"Default Realm\">{{nifi_registry_kerberos_realm}}</property>\n        <property name=\"Authentication Expiration\">{{nifi_registry_kerberos_authentication_expiration}}</property>\n        <property name=\"Enable Debug\">false</property>\n    </provider>\n    {% if not security_enabled %}\n    To enable the kerberos-provider remove 2 lines. This is 2 of 2. -->\n    {% endif %}\n</identityProviders>"
                }
            }
        },
        {
            "nifi-env": {
                "properties_attributes": {},
                "properties": {
                    "nifi_node_log_dir": "/var/log/nifi",
                    "nifi_user": "nifi",
                    "nifi_pid_dir": "/var/run/nifi",
                    "nifi_user_nproc_limit": "10000",
                    "nifi_user_nofile_limit": "50000",
                    "nifi_group": "nifi",
                    "content": "\n#!/bin/sh\n#\n#    Licensed to the Apache Software Foundation (ASF) under one or more\n#    contributor license agreements.  See the NOTICE file distributed with\n#    this work for additional information regarding copyright ownership.\n#    The ASF licenses this file to You under the Apache License, Version 2.0\n#    (the \"License\"); you may not use this file except in compliance with\n#    the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#\n\n# The java implementation to use.\nexport JAVA_HOME={{jdk64_home}}\n\nexport NIFI_HOME={{nifi_install_dir}}\n\n#The directory for the NiFi pid file\nexport NIFI_PID_DIR=\"{{nifi_pid_dir}}\"\n\n#The directory for NiFi log files\nexport NIFI_LOG_DIR=\"{{nifi_node_log_dir}}\"\n\n# Set to false to force the use of Keytab controller service in processors\n# that use Kerberos. If true, these processors will allow configuration of keytab\n# and principal directly within the processor. If false, these processors will be\n# invalid if attempting to configure these properties. This may be advantageous in\n# a multi-tenant environment where management of keytabs should be performed only by\n# a user with elevated permissions (i.e., users that have been granted the 'ACCESS_KEYTAB'\n# restriction).\nexport NIFI_ALLOW_EXPLICIT_KEYTAB={{nifi_allow_explicit_keytab}}"
                }
            }
        },
        {
            "nifi-toolkit-env": {
                "properties_attributes": {},
                "properties": {
                    "nifi_toolkit_java_options": "-Xms128m -Xmx256m"
                }
            }
        },
        {
            "nifi-registry-logback-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<configuration scan=\"true\" scanPeriod=\"30 seconds\">\n    <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n        <resetJUL>true</resetJUL>\n    </contextListener>\n\n    <appender name=\"APP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>{{nifi_registry_log_dir}}/nifi-registry-app.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n              For daily rollover, use 'app_%d.log'.\n              For hourly rollover, use 'app_%d{yyyy-MM-dd_HH}.log'.\n              To GZIP rolled files, replace '.log' with '.log.gz'.\n              To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>{{nifi_registry_log_dir}}/nifi-registry-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>\n            <timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\">\n                <maxFileSize>100MB</maxFileSize>\n            </timeBasedFileNamingAndTriggeringPolicy>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            <immediateFlush>true</immediateFlush>\n        </encoder>\n    </appender>\n\n    <appender name=\"BOOTSTRAP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>{{nifi_registry_log_dir}}/nifi-registry-bootstrap.log</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n              For daily rollover, use 'user_%d.log'.\n              For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n              To GZIP rolled files, replace '.log' with '.log.gz'.\n              To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>{{nifi_registry_log_dir}}/nifi-registry-bootstrap_%d.log</fileNamePattern>\n            <!-- keep 5 log files worth of history -->\n            <maxHistory>5</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->\n\n    <logger name=\"org.apache.nifi.registry\" level=\"INFO\"/>\n\n    <!-- To see SQL statements set this to DEBUG -->\n    <logger name=\"org.hibernate.SQL\" level=\"INFO\" />\n    <!-- To see the values in SQL statements set this to TRACE -->\n    <logger name=\"org.hibernate.type\" level=\"INFO\" />\n\n    <!--\n        Logger for capturing Bootstrap logs and NiFi Registry's standard error and standard out.\n    -->\n    <logger name=\"org.apache.nifi.registry.bootstrap\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n    <logger name=\"org.apache.nifi.registry.bootstrap.Command\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"CONSOLE\" />\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <!-- Everything written to NiFi Registry's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->\n    <logger name=\"org.apache.nifi.registry.StdOut\" level=\"INFO\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <!-- Everything written to NiFi Registry's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->\n    <logger name=\"org.apache.nifi.registry.StdErr\" level=\"ERROR\" additivity=\"false\">\n        <appender-ref ref=\"BOOTSTRAP_FILE\" />\n    </logger>\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"APP_FILE\"/>\n    </root>\n\n</configuration>"
                }
            }
        },
        {
            "ams-site": {
                "properties_attributes": {},
                "properties": {
                    "timeline.metrics.cluster.aggregator.hourly.interval": "3600",
                    "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.downsampler.event.metric.patterns": "topology\\.%",
                    "timeline.metrics.host.aggregator.hourly.interval": "3600",
                    "timeline.metrics.aggregators.skip.blockcache.enabled": "false",
                    "timeline.metrics.service.rpc.address": "0.0.0.0:60200",
                    "timeline.metrics.service.operation.mode": "embedded",
                    "timeline.metrics.aggregator.checkpoint.dir": "/var/lib/ambari-metrics-collector/checkpoint",
                    "failover.strategy": "round-robin",
                    "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.http.policy": "HTTP_ONLY",
                    "timeline.metrics.downsampler.topn.value": "10",
                    "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.watcher.timeout": "30",
                    "timeline.metrics.service.checkpointDelay": "60",
                    "timeline.metrics.host.inmemory.aggregation.port": "61888",
                    "timeline.metrics.cluster.aggregator.second.interval": "120",
                    "timeline.metrics.host.aggregator.daily.ttl": "31536000",
                    "timeline.metrics.service.watcher.delay": "30",
                    "timeline.metrics.service.watcher.disabled": "false",
                    "timeline.metrics.host.inmemory.aggregation.http.policy": "HTTP_ONLY",
                    "timeline.metrics.hbase.init.check.enabled": "true",
                    "timeline.metrics.host.aggregator.hourly.disabled": "false",
                    "timeline.metrics.service.cluster.aggregator.appIds": "datanode,nodemanager,hbase",
                    "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.resultset.fetchSize": "2000",
                    "timeline.metrics.cluster.aggregator.hourly.ttl": "31536000",
                    "cluster.zookeeper.quorum": "{{cluster_zookeeper_quorum_hosts}}",
                    "timeline.metrics.downsampler.topn.function": "max",
                    "timeline.metrics.host.aggregator.ttl": "86400",
                    "phoenix.spool.directory": "/tmp",
                    "timeline.metrics.host.aggregate.splitpoints": "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetFetch.98percentile",
                    "timeline.metrics.service.handler.thread.count": "20",
                    "timeline.metrics.cache.size": "150",
                    "timeline.metrics.cluster.aggregator.minute.interval": "300",
                    "timeline.metrics.cluster.aggregator.minute.ttl": "2592000",
                    "timeline.metrics.host.aggregator.minute.interval": "300",
                    "timeline.metrics.cluster.aggregator.interpolation.enabled": "true",
                    "timeline.metrics.cache.commit.interval": "3",
                    "timeline.metrics.host.aggregator.minute.disabled": "false",
                    "timeline.metrics.service.metadata.filters": "ContainerResource",
                    "timeline.metrics.cache.enabled": "true",
                    "timeline.metrics.cluster.aggregate.splitpoints": "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetFetch.98percentile",
                    "timeline.metrics.cluster.aggregator.minute.disabled": "false",
                    "timeline.metrics.service.use.groupBy.aggregators": "true",
                    "phoenix.query.maxGlobalMemoryPercentage": "25",
                    "timeline.metrics.service.default.result.limit": "5760",
                    "timeline.metrics.hbase.compression.scheme": "SNAPPY",
                    "timeline.metrics.cluster.aggregator.daily.ttl": "63072000",
                    "cluster.zookeeper.property.clientPort": "{{cluster_zookeeper_clientPort}}",
                    "timeline.metrics.sink.report.interval": "60",
                    "timeline.metrics.cluster.aggregator.second.timeslice.interval": "30",
                    "timeline.metrics.transient.metric.patterns": "topology\\.%",
                    "timeline.metrics.cluster.aggregation.sql.filters": "sdisk\\_%,boottime",
                    "timeline.metrics.downsampler.topn.metric.patterns": "dfs.NNTopUserOpCounts.windowMs=60000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=300000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=1500000.op=__%.user=%",
                    "timeline.metrics.host.aggregator.hourly.ttl": "2592000",
                    "timeline.metrics.whitelisting.enabled": "false",
                    "timeline.metrics.cluster.aggregator.daily.interval": "86400",
                    "timeline.metrics.host.aggregator.daily.disabled": "false",
                    "timeline.metrics.cluster.aggregator.daily.disabled": "false",
                    "timeline.metrics.cluster.aggregator.hourly.disabled": "false",
                    "timeline.metrics.service.watcher.initial.delay": "600",
                    "timeline.metrics.host.aggregator.minute.ttl": "604800",
                    "timeline.metrics.host.inmemory.aggregation": "false",
                    "timeline.metrics.hbase.data.block.encoding": "FAST_DIFF",
                    "timeline.metrics.cluster.aggregator.second.disabled": "false",
                    "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.daily.aggregator.minute.interval": "86400",
                    "timeline.metrics.cluster.aggregator.second.ttl": "259200"
                }
            }
        },
        {
            "activity-conf": {
                "properties_attributes": {},
                "properties": {
                    "global.activity.processing.parallelism": "8",
                    "yarn_app.activity.watcher.enabled": "true",
                    "mr_job.max.job.size.mb.for.parallel.execution": "500",
                    "global.activity.processor.pool.max.wait.seconds": "60",
                    "phoenix.sink.batch.size": "5000",
                    "phoenix.sink.flush.interval.seconds": "3600",
                    "hdfs.activity.watcher.enabled": "true",
                    "global.activity.analyzer.user": "activity_analyzer",
                    "tez_job.activity.watcher.enabled": "true",
                    "activity.explorer.user": "activity_explorer",
                    "mr_job.activity.watcher.enabled": "true",
                    "tez_job.tmp.dir": "/var/lib/smartsense/activity-analyzer/tez/tmp/"
                }
            }
        },
        {
            "activity-zeppelin-site": {
                "properties_attributes": {},
                "properties": {
                    "zeppelin.notebook.dir": "/var/lib/smartsense/activity-explorer/notebook",
                    "zeppelin.server.context.path": "/",
                    "zeppelin.ssl.keystore.type": "JKS",
                    "zeppelin.ssl.truststore.path": "/var/lib/smartsense/activity-explorer/truststore",
                    "zeppelin.war.tempdir": "/var/lib/smartsense/activity-explorer/webapp",
                    "zeppelin.websocket.max.text.message.size": "1024000",
                    "zeppelin.notebook.homescreen.hide": "false",
                    "zeppelin.interpreters": "org.apache.zeppelin.phoenix.PhoenixInterpreter",
                    "zeppelin.server.port": "9060",
                    "zeppelin.ssl": "false",
                    "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
                    "zeppelin.interpreter.connect.timeout": "30000",
                    "zeppelin.anonymous.allowed": "false",
                    "zeppelin.interpreter.dir": "/usr/hdp/share/hst/activity-explorer/interpreter",
                    "zeppelin.ssl.truststore.type": "JKS",
                    "zeppelin.ssl.keystore.path": "/var/lib/smartsense/activity-explorer/keystore",
                    "zeppelin.server.allowed.origins": "*",
                    "zeppelin.notebook.cron.enable": "true",
                    "zeppelin.server.addr": "0.0.0.0",
                    "zeppelin.ssl.client.auth": "false"
                }
            }
        },
        {
            "nifi-logsearch-conf": {
                "properties_attributes": {},
                "properties": {
                    "component_mappings": "NIFI_MASTER:nifi_app,nifi_bootstrap,nifi_setup,nifi_user;NIFI_CA:nifi_ca",
                    "content": "\n{\n  \"input\":[\n    {\n      \"type\":\"nifi_app\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-app.log\"\n    },\n    {\n      \"type\":\"nifi_bootstrap\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-bootstrap.log\"\n    },\n    {\n      \"type\":\"nifi_setup\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-setup.log\"\n    },\n    {\n      \"type\":\"nifi_user\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-user.log\"\n    },\n    {\n      \"type\":\"nifi_ca\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{nifi_log_dir}}/nifi-ca.stdout\"\n    }\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"nifi_app\",\n            \"nifi_bootstrap\",\n            \"nifi_setup\",\n            \"nifi_user\",\n            \"nifi_ca\"\n          ]\n        }\n      },\n      \"log4j_format\":\"\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n        }\n      }\n    }\n  ]\n}",
                    "service_name": "NiFi"
                }
            }
        },
        {
            "ams-hbase-env": {
                "properties_attributes": {},
                "properties": {
                    "hbase_master_maxperm_size": "128",
                    "max_open_files_limit": "32768",
                    "regionserver_xmn_size": "128",
                    "hbase_master_heapsize": "512",
                    "hbase_regionserver_xmn_ratio": "0.2",
                    "hbase_master_xmn_size": "192",
                    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n\n# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\nexport HBASE_HOME={{ams_hbase_home_dir}}",
                    "hbase_pid_dir": "/var/run/ambari-metrics-collector/",
                    "hbase_regionserver_shutdown_timeout": "30",
                    "hbase_log_dir": "/var/log/ambari-metrics-collector",
                    "hbase_regionserver_heapsize": "768",
                    "hbase_classpath_additional": ""
                }
            }
        },
        {
            "ams-log4j": {
                "properties_attributes": {},
                "properties": {
                    "ams_log_number_of_backup_files": "60",
                    "ams_log_max_backup_size": "80",
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize={{ams_log_max_backup_size}}MB\nlog4j.appender.file.MaxBackupIndex={{ams_log_number_of_backup_files}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
                }
            }
        },
        {
            "ams-ssl-server": {
                "properties_attributes": {},
                "properties": {
                    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
                    "ssl.server.truststore.reload.interval": "10000",
                    "ssl.server.truststore.type": "jks",
                    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
                    "ssl.server.keystore.type": "jks"
                }
            }
        },
        {
            "nifi-state-management-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n\n            <!--\n            This file provides a mechanism for defining and configuring the State Providers\n            that should be used for storing state locally and across a NiFi cluster. In order\n            to use a specific provider, it must be configured here and its identifier\n            must be specified in the nifi.properties file.\n            -->\n            <stateManagement>\n            <!--\n            State Provider that stores state locally in a configurable directory. This Provider requires the following properties:\n\n            Directory - the directory to store components' state in. If the directory being used is a sub-directory of the NiFi installation, it\n            is important that the directory be copied over to the new version when upgrading NiFi.\n            -->\n            <local-provider>\n            <id>local-provider</id>\n            <class>org.apache.nifi.controller.state.providers.local.WriteAheadLocalStateProvider</class>\n            <property name=\"Directory\">{{nifi_state_dir}}</property>\n            <property name=\"Always Sync\">false</property>\n            <property name=\"Partitions\">16</property>\n            <property name=\"Checkpoint Interval\">2 mins</property>\n            </local-provider>\n\n            <!--\n            State Provider that is used to store state in ZooKeeper. This Provider requires the following properties:\n\n            Root Node - the root node in ZooKeeper where state should be stored. The default is '/nifi', but it is advisable to change this to a different value if not using\n            the embedded ZooKeeper server and if multiple NiFi instances may all be using the same ZooKeeper Server.\n\n            Connect String - A comma-separated list of host:port pairs to connect to ZooKeeper. For example, myhost.mydomain:2181,host2.mydomain:5555,host3:6666\n\n            Session Timeout - Specifies how long this instance of NiFi is allowed to be disconnected from ZooKeeper before creating a new ZooKeeper Session. Default value is \"30 seconds\"\n\n            Access Control - Specifies which Access Controls will be applied to the ZooKeeper ZNodes that are created by this State Provider. This value must be set to one of:\n            - Open  : ZNodes will be open to any ZooKeeper client.\n            - CreatorOnly  : ZNodes will be accessible only by the creator. The creator will have full access to create children, read, write, delete, and administer the ZNodes.\n            This option is available only if access to ZooKeeper is secured via Kerberos or if a Username and Password are set.\n            -->\n\n\n            <cluster-provider>\n            <id>zk-provider</id>\n            <class>org.apache.nifi.controller.state.providers.zookeeper.ZooKeeperStateProvider</class>\n            <property name=\"Connect String\">{{zookeeper_quorum}}</property>\n            <property name=\"Root Node\">{{nifi_znode}}</property>\n            <property name=\"Session Timeout\">30 seconds</property>\n            <property name=\"Access Control\">Open</property>\n            </cluster-provider>\n            </stateManagement>"
                }
            }
        },
        {
            "ams-hbase-log4j": {
                "properties_attributes": {},
                "properties": {
                    "ams_hbase_log_maxfilesize": "256",
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize={{ams_hbase_log_maxfilesize}}MB\nhbase.log.maxbackupindex={{ams_hbase_log_maxbackupindex}}\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize={{ams_hbase_security_log_maxfilesize}}MB\nhbase.security.log.maxbackupindex={{ams_hbase_security_log_maxbackupindex}}\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO",
                    "ams_hbase_log_maxbackupindex": "20",
                    "ams_hbase_security_log_maxbackupindex": "20",
                    "ams_hbase_security_log_maxfilesize": "256"
                }
            }
        },
        {
            "ams-ssl-client": {
                "properties_attributes": {},
                "properties": {
                    "ssl.client.truststore.type": "jks",
                    "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks"
                }
            }
        },
        {
            "infra-solr-xml": {
                "properties_attributes": {},
                "properties": {
                    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n<solr>\n  <solrcloud>\n    <str name=\"host\">${host:}</str>\n    <int name=\"hostPort\">${jetty.port:}</int>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n    <int name=\"zkClientTimeout\">${zkClientTimeout:15000}</int>\n    <bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n  </solrcloud>\n{% if metrics_enabled -%}\n  <metrics>\n    <reporter name=\"ambariInfra\" group=\"jvm\" class=\"org.apache.ambari.infra.solr.metrics.reporters.SimpleAMSReporter\">\n      <int name=\"period\">60</int>\n      <str name=\"amsCollectorHosts\">{{ams_collector_hosts}}</str>\n      <int name=\"amsCollectorPort\">{{ams_collector_port}}</int>\n      <str name=\"amsCollectorProtocol\">{{ams_collector_protocol}}</str>\n      <str name=\"trustStoreLocation\">{{infra_solr_truststore_location}}</str>\n      <str name=\"trustStoreType\">{{infra_solr_truststore_type}}</str>\n      <str name=\"trustStorePassword\">{{infra_solr_truststore_password}}</str>\n      <str name=\"filter\">threads.count</str>\n      <str name=\"filter\">threads.deadlock.count</str>\n      <str name=\"filter\">memory.heap.used</str>\n      <str name=\"filter\">memory.heap.max</str>\n      <str name=\"filter\">memory.non-heap.used</str>\n      <str name=\"filter\">memory.non-heap.max</str>\n      <str name=\"filter\">memory.pools.CMS-Old-Gen.used</str>\n      <str name=\"filter\">memory.pools.CMS-Old-Gen.max</str>\n      <str name=\"filter\">gc.ConcurrentMarkSweep.count</str>\n      <str name=\"filter\">gc.ConcurrentMarkSweep.time</str>\n      <str name=\"filter\">gc.ParNew.count</str>\n      <str name=\"filter\">gc.ParNew.time</str>\n      <str name=\"filter\">memory.pools.Metaspace.used</str>\n      <str name=\"filter\">memory.pools.Metaspace.max</str>\n      <str name=\"filter\">memory.pools.Par-Eden-Space.used</str>\n      <str name=\"filter\">memory.pools.Par-Eden-Space.max</str>\n      <str name=\"filter\">memory.pools.Par-Survivor-Space.used</str>\n      <str name=\"filter\">memory.pools.Par-Survivor-Space.max</str>\n      <str name=\"filter\">gc.G1-Old-Generation.count</str>\n      <str name=\"filter\">gc.G1-Old-Generation.time</str>\n      <str name=\"filter\">gc.G1-Young-Generation.count</str>\n      <str name=\"filter\">gc.G1-Young-Generation.time</str>\n      <str name=\"filter\">memory.pools.G1-Eden-Space.used</str>\n      <str name=\"filter\">memory.pools.G1-Eden-Space.max</str>\n      <str name=\"filter\">memory.pools.G1-Survivor-Space.used</str>\n      <str name=\"filter\">memory.pools.G1-Survivor-Space.max</str>\n      <str name=\"filter\">os.processCpuLoad</str>\n      <str name=\"filter\">os.systemCpuLoad</str>\n      <str name=\"filter\">os.openFileDescriptorCount</str>\n    </reporter>\n  </metrics>\n  <metrics>\n    <reporter name=\"ambariInfraCore\" group=\"core\" class=\"org.apache.ambari.infra.solr.metrics.reporters.SimpleAMSReporter\">\n      <int name=\"period\">60</int>\n      <str name=\"amsCollectorHosts\">{{ams_collector_hosts}}</str>\n      <int name=\"amsCollectorPort\">{{ams_collector_port}}</int>\n      <str name=\"amsCollectorProtocol\">{{ams_collector_protocol}}</str>\n      <str name=\"trustStoreLocation\">{{infra_solr_truststore_location}}</str>\n      <str name=\"trustStoreType\">{{infra_solr_truststore_type}}</str>\n      <str name=\"trustStorePassword\">{{infra_solr_truststore_password}}</str>\n      <str name=\"filter\">UPDATE.updateHandler.adds</str>\n      <str name=\"filter\">UPDATE.updateHandler.deletesById</str>\n      <str name=\"filter\">UPDATE.updateHandler.errors</str>\n      <str name=\"filter\">UPDATE.updateHandler.docsPending</str>\n      <str name=\"filter\">QUERY./select.requests</str>\n      <str name=\"filter\">QUERY./select.requestTimes</str>\n      <str name=\"filter\">UPDATE./update.requests</str>\n      <str name=\"filter\">UPDATE./update.requestTimes</str>\n      <str name=\"filter\">QUERY./get.requests</str>\n      <str name=\"filter\">QUERY./get.requestTimes</str>\n      <str name=\"filter\">ADMIN./admin/luke.requests</str>\n      <str name=\"filter\">ADMIN./admin/luke.requestTimes</str>\n      <str name=\"filter\">QUERY./query.requests</str>\n      <str name=\"filter\">QUERY./query.requestTimes</str>\n      <str name=\"filter\">INDEX.sizeInBytes</str>\n    </reporter>\n  </metrics>\n  <metrics>\n    <reporter name=\"ambariInfraCache\" group=\"core\" class=\"org.apache.ambari.infra.solr.metrics.reporters.AMSCacheReporter\">\n      <int name=\"period\">60</int>\n      <str name=\"amsCollectorHosts\">{{ams_collector_hosts}}</str>\n      <int name=\"amsCollectorPort\">{{ams_collector_port}}</int>\n      <str name=\"amsCollectorProtocol\">{{ams_collector_protocol}}</str>\n      <str name=\"trustStoreLocation\">{{infra_solr_truststore_location}}</str>\n      <str name=\"trustStoreType\">{{infra_solr_truststore_type}}</str>\n      <str name=\"trustStorePassword\">{{infra_solr_truststore_password}}</str>\n      <str name=\"filter\">CACHE.searcher.filterCache</str>\n      <str name=\"filter\">CACHE.searcher.queryResultCache</str>\n      <str name=\"filter\">CACHE.searcher.documentCache</str>\n      <str name=\"fields\">hitratio, size, warmupTime</str>\n    </reporter>\n  </metrics>\n  <metrics>\n    <reporter name=\"ambariInfraFieldCache\" group=\"core\" class=\"org.apache.ambari.infra.solr.metrics.reporters.AMSCacheReporter\">\n      <int name=\"period\">60</int>\n      <str name=\"amsCollectorHosts\">{{ams_collector_hosts}}</str>\n      <int name=\"amsCollectorPort\">{{ams_collector_port}}</int>\n      <str name=\"amsCollectorProtocol\">{{ams_collector_protocol}}</str>\n      <str name=\"trustStoreLocation\">{{infra_solr_truststore_location}}</str>\n      <str name=\"trustStoreType\">{{infra_solr_truststore_type}}</str>\n      <str name=\"trustStorePassword\">{{infra_solr_truststore_password}}</str>\n      <str name=\"filter\">CACHE.core.fieldCache</str>\n      <str name=\"fields\">entries_count</str>\n    </reporter>\n  </metrics>\n{% endif %}\n</solr>"
                }
            }
        },
        {
            "nifi-node-logback-env": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n            <!--\n            Licensed to the Apache Software Foundation (ASF) under one or more\n            contributor license agreements.  See the NOTICE file distributed with\n            this work for additional information regarding copyright ownership.\n            The ASF licenses this file to You under the Apache License, Version 2.0\n            (the \"License\"); you may not use this file except in compliance with\n            the License.  You may obtain a copy of the License at\n            http://www.apache.org/licenses/LICENSE-2.0\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            See the License for the specific language governing permissions and\n            limitations under the License.\n            -->\n\n            <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n            <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n            <resetJUL>true</resetJUL>\n            </contextListener>\n\n            <appender name=\"APP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-app.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'app_%d.log'.\n            For hourly rollover, use 'app_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>\n            <maxFileSize>100MB</maxFileSize>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n\n            <!-- optional setting for keeping 10GB total of log files\n            <totalSizeCap>10GB</totalSizeCap>\n            -->\n            </rollingPolicy>\n            <immediateFlush>true</immediateFlush>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"USER_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-user.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'user_%d.log'.\n            For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-user_%d.log</fileNamePattern>\n            <!-- keep 30 log files worth of history -->\n            <maxHistory>30</maxHistory>\n            </rollingPolicy>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"BOOTSTRAP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n            <file>${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap.log</file>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!--\n            For daily rollover, use 'user_%d.log'.\n            For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n            To GZIP rolled files, replace '.log' with '.log.gz'.\n            To ZIP rolled files, replace '.log' with '.log.zip'.\n            -->\n            <fileNamePattern>${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap_%d.log</fileNamePattern>\n            <!-- keep 5 log files worth of history -->\n            <maxHistory>5</maxHistory>\n            </rollingPolicy>\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n            <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n            <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n            </encoder>\n            </appender>\n\n            <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->\n\n            <logger name=\"org.apache.nifi\" level=\"INFO\"/>\n            <logger name=\"org.apache.nifi.processors\" level=\"WARN\"/>\n            <logger name=\"org.apache.nifi.processors.standard.LogAttribute\" level=\"INFO\"/>\n            <logger name=\"org.apache.nifi.controller.repository.StandardProcessSession\" level=\"WARN\" />\n\n\n            <logger name=\"org.apache.zookeeper.ClientCnxn\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.NIOServerCnxn\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.NIOServerCnxnFactory\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.quorum\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.ZooKeeper\" level=\"ERROR\" />\n            <logger name=\"org.apache.zookeeper.server.PrepRequestProcessor\" level=\"ERROR\" />\n\n            <logger name=\"org.apache.curator.framework.recipes.leader.LeaderSelector\" level=\"OFF\" />\n            <logger name=\"org.apache.curator.ConnectionState\" level=\"OFF\" />\n\n            <!-- Logger for managing logging statements for nifi clusters. -->\n            <logger name=\"org.apache.nifi.cluster\" level=\"INFO\"/>\n\n            <!-- Logger for logging HTTP requests received by the web server. -->\n            <logger name=\"org.apache.nifi.server.JettyServer\" level=\"INFO\"/>\n\n            <!-- Logger for managing logging statements for jetty -->\n            <logger name=\"org.eclipse.jetty\" level=\"INFO\"/>\n\n            <!-- Suppress non-error messages due to excessive logging by class or library -->\n            <logger name=\"com.sun.jersey.spi.container.servlet.WebComponent\" level=\"ERROR\"/>\n            <logger name=\"com.sun.jersey.spi.spring\" level=\"ERROR\"/>\n            <logger name=\"org.springframework\" level=\"ERROR\"/>\n\n            <!-- Suppress non-error messages due to known warning about redundant path annotation (NIFI-574) -->\n            <logger name=\"com.sun.jersey.spi.inject.Errors\" level=\"ERROR\"/>\n\n            <!--\n            Logger for capturing user events. We do not want to propagate these\n            log events to the root logger. These messages are only sent to the\n            user-log appender.\n            -->\n            <logger name=\"org.apache.nifi.web.security\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.web.api.config\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.authorization\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.cluster.authorization\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n            <logger name=\"org.apache.nifi.web.filter.RequestLogger\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"USER_FILE\"/>\n            </logger>\n\n\n            <!--\n            Logger for capturing Bootstrap logs and NiFi's standard error and standard out.\n            -->\n            <logger name=\"org.apache.nifi.bootstrap\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n            <logger name=\"org.apache.nifi.bootstrap.Command\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"CONSOLE\" />\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Everything written to NiFi's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->\n            <logger name=\"org.apache.nifi.StdOut\" level=\"INFO\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Everything written to NiFi's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->\n            <logger name=\"org.apache.nifi.StdErr\" level=\"ERROR\" additivity=\"false\">\n            <appender-ref ref=\"BOOTSTRAP_FILE\" />\n            </logger>\n\n            <!-- Turn off Calcite Exception logging -->\n            <logger name=\"org.apache.calcite.runtime.CalciteException\" level=\"OFF\" />\n\n\n            <root level=\"INFO\">\n            <appender-ref ref=\"APP_FILE\"/>\n            </root>\n\n            </configuration>"
                }
            }
        },
        {
            "ams-hbase-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.masterregion.protocol.acl": "*",
                    "security.admin.protocol.acl": "*",
                    "security.client.protocol.acl": "*"
                }
            }
        },
        {
            "ams-grafana-ini": {
                "properties_attributes": {},
                "properties": {
                    "protocol": "http",
                    "cert_key": "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
                    "port": "3000",
                    "cert_file": "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
                    "ca_cert": "",
                    "content": "\n##################### Grafana Configuration Example #####################\n#\n# Everything has defaults so you only need to uncomment things you want to\n# change\n\n# possible values : production, development\n; app_mode = production\n\n#################################### Paths ####################################\n[paths]\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\n#\n;data = /var/lib/grafana\ndata = {{ams_grafana_data_dir}}\n#\n# Directory where grafana can store logs\n#\n;logs = /var/log/grafana\nlogs = {{ams_grafana_log_dir}}\n\n\n#################################### Server ####################################\n[server]\n# Protocol (http or https)\n;protocol = http\nprotocol = {{ams_grafana_protocol}}\n# The ip address to bind to, empty will bind to all interfaces\n;http_addr =\n\n# The http port  to use\n;http_port = 3000\nhttp_port = {{ams_grafana_port}}\n\n# The public facing domain name used to access grafana from a browser\n;domain = localhost\n\n# Redirect to correct domain if host header does not match domain\n# Prevents DNS rebinding attacks\n;enforce_domain = false\n\n# The full public facing url\n;root_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n# Log web requests\n;router_logging = false\n\n# the path relative working path\n;static_root_path = public\nstatic_root_path = /usr/lib/ambari-metrics-grafana/public\n\n# enable gzip\n;enable_gzip = false\n\n# https certs & key file\n;cert_file =\n;cert_key =\ncert_file = {{ams_grafana_cert_file}}\ncert_key = {{ams_grafana_cert_key}}\n\n#################################### Database ####################################\n[database]\n# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice\n;type = sqlite3\n;host = 127.0.0.1:3306\n;name = grafana\n;user = root\n;password =\n\n# For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\n;ssl_mode = disable\n\n# For \"sqlite3\" only, path relative to data_path setting\n;path = grafana.db\n\n#################################### Session ####################################\n[session]\n# Either \"memory\", \"file\", \"redis\", \"mysql\", \"postgres\", default is \"file\"\n;provider = file\n\n# Provider config options\n# memory: not have any config yet\n# file: session dir path, is relative to grafana data_path\n# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`\n# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`\n# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable\n;provider_config = sessions\n\n# Session cookie name\n;cookie_name = grafana_sess\n\n# If you use session in https only, default is false\n;cookie_secure = false\n\n# Session life time, default is 86400\n;session_life_time = 86400\n\n#################################### Analytics ####################################\n[analytics]\n# Server reporting, sends usage counters to stats.grafana.org every 24 hours.\n# No ip addresses are being tracked, only simple counters to track\n# running instances, dashboard and error counts. It is very helpful to us.\n# Change this option to false to disable reporting.\n;reporting_enabled = true\n\n# Google Analytics universal tracking code, only enabled if you specify an id here\n;google_analytics_ua_id =\n\n#################################### Security ####################################\n[security]\n# default admin user, created on startup\nadmin_user = {{ams_grafana_admin_user}}\n\n# default admin password, can be changed before first start of grafana,  or in profile settings\n;admin_password =\n\n# used for signing\n;secret_key = SW2YcwTIb9zpOOhoPsMm\n\n# Auto-login remember days\n;login_remember_days = 7\n;cookie_username = grafana_user\n;cookie_remember_name = grafana_remember\n\n# disable gravatar profile images\n;disable_gravatar = false\n\n# data source proxy whitelist (ip_or_domain:port seperated by spaces)\n;data_source_proxy_whitelist =\n\n#################################### Users ####################################\n[users]\n# disable user signup / registration\n;allow_sign_up = true\n\n# Allow non admin users to create organizations\n;allow_org_create = true\n\n# Set to true to automatically assign new users to the default organization (id 1)\n;auto_assign_org = true\n\n# Default role new users will be automatically assigned (if disabled above is set to true)\n;auto_assign_org_role = Viewer\n\n# Background text for the user field on the login page\n;login_hint = email or username\n\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = Main Org.\n\n# specify role for unauthenticated users\n;org_role = Admin\n\n#################################### Github Auth ##########################\n[auth.github]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_id\n;client_secret = some_secret\n;scopes = user:email,read:org\n;auth_url = https://github.com/login/oauth/authorize\n;token_url = https://github.com/login/oauth/access_token\n;api_url = https://api.github.com/user\n;team_ids =\n;allowed_organizations =\n\n#################################### Google Auth ##########################\n[auth.google]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_client_id\n;client_secret = some_client_secret\n;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\n;auth_url = https://accounts.google.com/o/oauth2/auth\n;token_url = https://accounts.google.com/o/oauth2/token\n;api_url = https://www.googleapis.com/oauth2/v1/userinfo\n;allowed_domains =\n\n#################################### Auth Proxy ##########################\n[auth.proxy]\n;enabled = false\n;header_name = X-WEBAUTH-USER\n;header_property = username\n;auto_sign_up = true\n\n#################################### Basic Auth ##########################\n[auth.basic]\n;enabled = true\n\n#################################### Auth LDAP ##########################\n[auth.ldap]\n;enabled = false\n;config_file = /etc/grafana/ldap.toml\n\n#################################### SMTP / Emailing ##########################\n[smtp]\n;enabled = false\n;host = localhost:25\n;user =\n;password =\n;cert_file =\n;key_file =\n;skip_verify = false\n;from_address = admin@grafana.localhost\n\n[emails]\n;welcome_email_on_sign_up = false\n\n#################################### Logging ##########################\n[log]\n# Either \"console\", \"file\", default is \"console\"\n# Use comma to separate multiple modes, e.g. \"console, file\"\n;mode = console, file\n\n# Buffer length of channel, keep it as it is if you don't know what it is.\n;buffer_len = 10000\n\n# Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\n;level = Info\n\n# For \"console\" mode only\n[log.console]\n;level =\n\n# For \"file\" mode only\n[log.file]\n;level =\n# This enables automated log rotate(switch of following options), default is true\n;log_rotate = true\n\n# Max line number of single file, default is 1000000\n;max_lines = 1000000\n\n# Max size shift of single file, default is 28 means 1 << 28, 256MB\n;max_lines_shift = 28\n\n# Segment log daily, default is true\n;daily_rotate = true\n\n# Expired days of log file(delete after max days), default is 7\n;max_days = 7\n\n#################################### AMPQ Event Publisher ##########################\n[event_publisher]\n;enabled = false\n;rabbitmq_url = amqp://localhost/\n;exchange = grafana_events\n\n;#################################### Dashboard JSON files ##########################\n[dashboards.json]\n;enabled = false\n;path = /var/lib/grafana/dashboards\npath = /usr/lib/ambari-metrics-grafana/public/dashboards"
                }
            }
        },
        {
            "nifi-properties": {
                "properties_attributes": {},
                "properties": {
                    "nifi.remote.input.http.transaction.ttl": "30 sec",
                    "nifi.flow.configuration.archive.max.storage": "500 MB",
                    "nifi.content.claim.max.appendable.size": "1 MB",
                    "nifi.sensitive.props.provider": "BC",
                    "nifi.cluster.node.protocol.max.threads": "",
                    "nifi.security.identity.mapping.transform.dn": "",
                    "nifi.web.proxy.host": "",
                    "nifi.content.repository.archive.enabled": "true",
                    "nifi.flow.configuration.archive.dir": "{{nifi_internal_dir}}/archive/",
                    "nifi.security.keystore": "{{nifi_keystore}}",
                    "nifi.web.http.host": "{{nifi_node_nonssl_host}}",
                    "nifi.flowservice.writedelay.interval": "500 ms",
                    "nifi.remote.input.secure": "{{nifi_ssl_enabled}}",
                    "nifi.provenance.repository.max.storage.time": "24 hours",
                    "nifi.swap.in.period": "5 sec",
                    "nifi.web.https.network.interface.default": "",
                    "nifi.bored.yield.duration": "10 millis",
                    "nifi.variable.registry.properties": "",
                    "nifi.provenance.repository.query.threads": "2",
                    "nifi.swap.in.threads": "1",
                    "nifi.cluster.node.protocol.threads": "50",
                    "nifi.ui.banner.text": "",
                    "nifi.flow.configuration.archive.max.time": "30 days",
                    "nifi.security.keyPasswd": "{{nifi_keyPasswd}}",
                    "nifi.web.proxy.context.path": "",
                    "nifi.security.ocsp.responder.url": "",
                    "nifi.provenance.repository.compress.on.rollover": "true",
                    "nifi.kerberos.spnego.principal": "",
                    "nifi.flowfile.repository.wal.implementation": "org.apache.nifi.wali.SequentialAccessWriteAheadLog",
                    "nifi.flowcontroller.graceful.shutdown.period": "10 sec",
                    "nifi.cluster.node.event.history.size": "25",
                    "nifi.provenance.repository.implementation": "org.apache.nifi.provenance.PersistentProvenanceRepository",
                    "nifi.provenance.repository.rollover.size": "100 MB",
                    "nifi.cluster.flow.election.max.wait.time": "5 mins",
                    "nifi.components.status.repository.implementation": "org.apache.nifi.controller.status.history.VolatileComponentStatusRepository",
                    "nifi.content.repository.archive.max.retention.period": "12 hours",
                    "nifi.flow.configuration.archive.max.count": "",
                    "nifi.cluster.flow.election.max.candidates": "{{nifi_num_nodes}}",
                    "nifi.provenance.repository.encryption.key.provider.implementation": "",
                    "nifi.security.group.mapping.transform.anygroup": "",
                    "nifi.web.jetty.threads": "200",
                    "nifi.provenance.repository.rollover.time": "30 secs",
                    "nifi.queue.backpressure.count": "10000",
                    "nifi.cluster.protocol.heartbeat.interval": "5 sec",
                    "nifi.provenance.repository.max.storage.size": "1 GB",
                    "nifi.h2.url.append": ";LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE",
                    "nifi.provenance.repository.debug.frequency": "1_000_000",
                    "nifi.sensitive.props.additional.keys": "",
                    "nifi.security.ocsp.responder.certificate": "",
                    "nifi.version": "1.8.0.{{stack_version_buildnum}}",
                    "nifi.cluster.node.connection.timeout": "30 sec",
                    "nifi.security.user.knox.audiences": "",
                    "nifi.components.status.snapshot.frequency": "1 min",
                    "nifi.security.identity.mapping.pattern.kerb": "",
                    "nifi.web.http.network.interface.default": "",
                    "nifi.security.user.knox.cookieName": "hadoop-jwt",
                    "nifi.cluster.is.node": "{{nifi_is_node}}",
                    "nifi.flowfile.repository.partitions": "256",
                    "nifi.provenance.repository.indexed.attributes": "",
                    "nifi.provenance.repository.index.shard.size": "500 MB",
                    "nifi.state.management.embedded.zookeeper.start": "false",
                    "nifi.security.keystoreType": "{{nifi_keystoreType}}",
                    "nifi.state.management.provider.local": "local-provider",
                    "nifi.security.group.mapping.pattern.anygroup": "",
                    "nifi.provenance.repository.concurrent.merge.threads": "2",
                    "nifi.provenance.repository.encryption.key.provider.location": "",
                    "nifi.flow.configuration.file": "{{nifi_flow_config_dir}}/flow.xml.gz",
                    "nifi.nar.working.directory": "{{nifi_internal_dir}}/work/nar",
                    "nifi.authorizer.configuration.file": "{{nifi_config_dir}}/authorizers.xml",
                    "nifi.templates.directory": "{{nifi_internal_dir}}/templates",
                    "nifi.state.management.provider.cluster": "zk-provider",
                    "nifi.zookeeper.root.node": "{{nifi_znode}}",
                    "nifi.security.user.oidc.discovery.url": "",
                    "nifi.security.keystorePasswd": "{{nifi_keystorePasswd}}",
                    "nifi.security.user.oidc.connect.timeout": "5 secs",
                    "nifi.security.identity.mapping.transform.kerb": "",
                    "nifi.security.truststoreType": "{{nifi_truststoreType}}",
                    "nifi.content.viewer.url": "../nifi-content-viewer/",
                    "nifi.provenance.repository.encryption.key.id": "",
                    "nifi.zookeeper.session.timeout": "60 secs",
                    "nifi.content.repository.archive.max.usage.percentage": "50%",
                    "nifi.nar.library.directory": "{{nifi_install_dir}}/lib",
                    "nifi.swap.manager.implementation": "org.apache.nifi.controller.FileSystemSwapManager",
                    "nifi.cluster.node.address": "{{nifi_node_host}}",
                    "nifi.flow.configuration.archive.enabled": "true",
                    "nifi.provenance.repository.journal.count": "16",
                    "nifi.provenance.repository.buffer.size": "100000",
                    "nifi.kerberos.krb5.file": "",
                    "nifi.queue.swap.threshold": "20000",
                    "nifi.sensitive.props.key": "{{nifi_sensitive_props_key}}",
                    "nifi.components.status.repository.buffer.size": "1440",
                    "nifi.security.identity.mapping.value.kerb": "",
                    "nifi.content.repository.directory.default": "{{nifi_content_repo_dir_default}}",
                    "nifi.kerberos.service.principal": "",
                    "nifi.flowfile.repository.implementation": "org.apache.nifi.controller.repository.WriteAheadFlowFileRepository",
                    "nifi.state.management.embedded.zookeeper.properties": "{{nifi_config_dir}}/zookeeper.properties",
                    "nifi.web.war.directory": "{{nifi_install_dir}}/lib",
                    "nifi.swap.out.period": "5 sec",
                    "nifi.kerberos.spnego.authentication.expiration": "12 hours",
                    "nifi.documentation.working.directory": "{{nifi_internal_dir}}/work/docs/components",
                    "nifi.remote.input.socket.port": "9663",
                    "nifi.web.https.host": "{{nifi_node_ssl_host}}",
                    "nifi.web.max.header.size": "16 KB",
                    "nifi.web.jetty.working.directory": "{{nifi_internal_dir}}/work/jetty",
                    "nifi.security.identity.mapping.pattern.dn": "",
                    "nifi.security.user.oidc.preferred.jwsalgorithm": "",
                    "nifi.zookeeper.connect.timeout": "60 secs",
                    "nifi.flowfile.repository.checkpoint.interval": "2 mins",
                    "nifi.cluster.node.max.concurrent.requests": "100",
                    "nifi.cluster.node.read.timeout": "30 sec",
                    "nifi.provenance.repository.warm.cache.frequency": "1 hour",
                    "nifi.administrative.yield.duration": "30 sec",
                    "nifi.security.user.knox.publicKey": "",
                    "nifi.sensitive.props.algorithm": "PBEWITHMD5AND256BITAES-CBC-OPENSSL",
                    "nifi.content.repository.always.sync": "false",
                    "nifi.provenance.repository.indexed.fields": "EventType, FlowFileUUID, Filename, ProcessorID, Relationship",
                    "nifi.provenance.repository.index.threads": "1",
                    "nifi.provenance.repository.encryption.key": "",
                    "nifi.swap.out.threads": "4",
                    "nifi.security.group.mapping.value.anygroup": "",
                    "nifi.security.user.oidc.read.timeout": "5 secs",
                    "nifi.cluster.protocol.is.secure": "{{nifi_ssl_enabled}}",
                    "nifi.web.http.port": "{{nifi_node_port}}",
                    "nifi.remote.input.host": "",
                    "nifi.content.claim.max.flow.files": "100",
                    "nifi.flowcontroller.autoResumeState": "true",
                    "nifi.remote.contents.cache.expiration": "30 secs",
                    "nifi.security.user.knox.url": "",
                    "nifi.provenance.repository.max.attribute.length": "65536",
                    "nifi.security.user.authorizer": "{{nifi_authorizer}}",
                    "nifi.kerberos.spnego.keytab.location": "",
                    "nifi.zookeeper.connect.string": "{{zookeeper_quorum}}",
                    "nifi.flowfile.repository.always.sync": "false",
                    "nifi.provenance.repository.directory.default": "{{nifi_provenance_repo_dir_default}}",
                    "nifi.state.management.configuration.file": "{{nifi_config_dir}}/state-management.xml",
                    "nifi.web.https.port": "{{nifi_node_ssl_port}}",
                    "nifi.security.user.login.identity.provider": "",
                    "nifi.security.user.oidc.client.id": "",
                    "nifi.content.repository.implementation": "org.apache.nifi.controller.repository.FileSystemRepository",
                    "nifi.flowfile.repository.directory": "{{nifi_flowfile_repo_dir}}",
                    "nifi.login.identity.provider.configuration.file": "{{nifi_config_dir}}/login-identity-providers.xml",
                    "nifi.provenance.repository.always.sync": "false",
                    "nifi.queue.backpressure.size": "1 GB",
                    "nifi.kerberos.service.keytab.location": "",
                    "nifi.cluster.node.protocol.port": "{{nifi_node_protocol_port}}",
                    "nifi.security.truststorePasswd": "{{nifi_truststorePasswd}}",
                    "nifi.ui.autorefresh.interval": "30 sec",
                    "nifi.security.identity.mapping.value.dn": "",
                    "nifi.security.truststore": "{{nifi_truststore}}",
                    "nifi.remote.input.http.enabled": "true",
                    "nifi.database.directory": "{{nifi_database_dir}}"
                }
            }
        },
        {
            "zookeeper-env": {
                "properties_attributes": {},
                "properties": {
                    "zk_log_dir": "/var/log/zookeeper",
                    "zk_user": "zookeeper",
                    "zk_pid_dir": "/var/run/zookeeper",
                    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}} -Dzookeeper.sasl.client.username={{zk_principal_user}}\"\n{% endif %}",
                    "zk_server_heapsize": "1024m"
                }
            }
        },
        {
            "activity-zeppelin-interpreter": {
                "properties_attributes": {},
                "properties": {
                    "activity-zeppelin-interpreter-content": "{\n  \"interpreterSettings\": {\n    \"jdbc\": {\n      \"id\": \"jdbc\",\n      \"name\": \"jdbc\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"jdbc:postgresql://localhost:5432/\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.postgresql.Driver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"phoenix\": {\n      \"id\": \"phoenix\",\n      \"name\": \"phoenix\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"{{activity_explorer_jdbc_url}}\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.apache.phoenix.jdbc.PhoenixDriver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.phoenix.query.numberFormat\": {\n          \"name\": \"default.phoenix.query.numberFormat\",\n          \"value\": \"#.#\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": true,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"md\": {\n      \"id\": \"md\",\n      \"name\": \"md\",\n      \"group\": \"md\",\n      \"properties\": {\n        \"markdown.parser.type\": {\n          \"name\": \"markdown.parser.type\",\n          \"value\": \"pegdown\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"md\",\n          \"class\": \"org.apache.zeppelin.markdown.Markdown\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"markdown\",\n            \"editOnDblClick\": true,\n            \"completionSupport\": false\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    }\n  },\n  \"interpreterBindings\": {\n    \"2DGK3YSSY\": [\n      \"phoenix\"\n    ],\n    \"2BQH91X36\": [\n      \"phoenix\"\n    ],\n    \"2BNVQJUBK\": [\n      \"phoenix\"\n    ],\n    \"2BPD7951H\": [\n      \"phoenix\"\n    ],\n    \"2DGNFSF2D\": [\n      \"phoenix\"\n    ],\n    \"2DGCYZ7F3\": [\n      \"phoenix\"\n    ],\n    \"2BTCVPTMH\": [\n      \"phoenix\"\n    ]\n  },\n  \"interpreterRepositories\": [\n    {\n      \"id\": \"central\",\n      \"type\": \"default\",\n      \"url\": \"http://repo1.maven.org/maven2/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPReleases\",\n      \"type\": \"default\",\n      \"url\": \"http://repo.hortonworks.com/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPDev\",\n      \"type\": \"default\",\n      \"url\": \"http://nexus-private.hortonworks.com/nexus/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"local\",\n      \"type\": \"default\",\n      \"url\": \"file:///var/lib/smartsense/activity-explorer/.m2/repository\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    }\n  ]\n}"
                }
            }
        },
        {
            "cluster-env": {
                "properties_attributes": {},
                "properties": {
                    "recovery_max_count": "6",
                    "managed_hdfs_resource_property_names": "",
                    "recovery_retry_interval": "5",
                    "stack_features": "{\n  \"HDF\": {\n    \"stack_features\": [\n      {\n        \"name\": \"snappy\",\n        \"description\": \"Snappy compressor/decompressor support\",\n        \"min_version\": \"0.0.0.0\",\n        \"max_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"lzo\",\n        \"description\": \"LZO libraries support\",\n        \"min_version\": \"0.2.1.0\"\n      },\n      {\n        \"name\": \"express_upgrade\",\n        \"description\": \"Express upgrade support\",\n        \"min_version\": \"0.1.0.0\"\n      },\n      {\n        \"name\": \"rolling_upgrade\",\n        \"description\": \"Rolling upgrade support\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_acl_migration_support\",\n        \"description\": \"ACL migration support\",\n        \"min_version\": \"2.3.4.0\"\n      },\n      {\n        \"name\": \"config_versioning\",\n        \"description\": \"Configurable versions support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"datanode_non_root\",\n        \"description\": \"DataNode running as non-root support (AMBARI-7615)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"remove_ranger_hdfs_plugin_env\",\n        \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger\",\n        \"description\": \"Ranger Service support\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_tagsync_component\",\n        \"description\": \"Ranger Tagsync component support (AMBARI-14383)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"phoenix\",\n        \"description\": \"Phoenix Service support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"nfs\",\n        \"description\": \"NFS support\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"tez_for_spark\",\n        \"description\": \"Tez dependency for Spark\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"timeline_state_store\",\n        \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"copy_tarball_to_hdfs\",\n        \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"spark_16plus\",\n        \"description\": \"Spark 1.6+\",\n        \"min_version\": \"1.2.0.0\"\n      },\n      {\n        \"name\": \"spark_thriftserver\",\n        \"description\": \"Spark Thrift Server\",\n        \"min_version\": \"0.3.2.0\"\n      },\n      {\n        \"name\": \"storm_kerberos\",\n        \"description\": \"Storm Kerberos support (AMBARI-7570)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"storm_ams\",\n        \"description\": \"Storm AMS integration (AMBARI-10710)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"create_kafka_broker_id\",\n        \"description\": \"Ambari should create Kafka Broker Id (AMBARI-12678)\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_listeners\",\n        \"description\": \"Kafka listeners (AMBARI-10984)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_kerberos\",\n        \"description\": \"Kafka Kerberos support (AMBARI-10984)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"pig_on_tez\",\n        \"description\": \"Pig on Tez support (AMBARI-7863)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_non_root\",\n        \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_audit_db_support\",\n        \"description\": \"Ranger Audit to DB support\",\n        \"min_version\": \"0.2.0.0\",\n        \"max_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"accumulo_kerberos_user_auth\",\n        \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"knox_versioned_data_dir\",\n        \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\",\n        \"min_version\": \"0.3.2.0\"\n      },\n      {\n        \"name\": \"knox_sso_topology\",\n        \"description\": \"Knox SSO Topology support (AMBARI-13975)\",\n        \"min_version\": \"0.3.8.0\"\n      },\n      {\n        \"name\": \"atlas_rolling_upgrade\",\n        \"description\": \"Rolling upgrade support for Atlas\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"oozie_admin_user\",\n        \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_create_hive_tez_configs\",\n        \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_setup_shared_lib\",\n        \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_host_kerberos\",\n        \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\",\n        \"min_version\": \"0.0.0.0\",\n        \"max_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"falcon_extensions\",\n        \"description\": \"Falcon Extension\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_upgrade_schema\",\n        \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server_interactive\",\n        \"description\": \"Hive server interactive support (AMBARI-15573)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_webhcat_specific_configs\",\n        \"description\": \"Hive webhcat specific configurations support (AMBARI-12364)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_purge_table\",\n        \"description\": \"Hive purge table support (AMBARI-12260)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server2_kerberized_env\",\n        \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\",\n        \"min_version\": \"0.2.3.0\",\n        \"max_version\": \"0.2.5.0\"\n      },\n      {\n        \"name\": \"hive_env_heapsize\",\n        \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\",\n        \"min_version\": \"0.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_hsm_support\",\n        \"description\": \"Ranger KMS HSM support (AMBARI-15752)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_log4j_support\",\n        \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_kerberos_support\",\n        \"description\": \"Ranger Kerberos support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_site_support\",\n        \"description\": \"Hive Metastore site support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_password_jceks\",\n        \"description\": \"Saving Ranger Usersync credentials in jceks\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_install_infra_client\",\n        \"description\": \"Ambari Infra Service support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"hbase_home_directory\",\n        \"description\": \"Hbase home directory in HDFS needed for HBASE backup\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"spark_livy\",\n        \"description\": \"Livy as slave component of spark\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"atlas_ranger_plugin_support\",\n        \"description\": \"Atlas Ranger plugin support\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"atlas_conf_dir_in_path\",\n        \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\",\n        \"min_version\": \"0.3.0.0\",\n        \"max_version\": \"0.4.99.99\"\n      },\n      {\n        \"name\": \"atlas_upgrade_support\",\n        \"description\": \"Atlas supports express and rolling upgrades\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_pid_support\",\n        \"description\": \"Ranger Service support pid generation AMBARI-16756\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_pid_support\",\n        \"description\": \"Ranger KMS Service support pid generation\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_admin_password_change\",\n        \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"storm_metrics_apache_classes\",\n        \"description\": \"Metrics sink for Storm that uses Apache class names\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"toolkit_config_update\",\n        \"description\": \"Support separate input and output for toolkit configuration\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypt_config\",\n        \"description\": \"Encrypt sensitive properties written to nifi property file\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"ranger_xml_configuration\",\n        \"description\": \"Ranger code base support xml configurations\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_ranger_plugin_support\",\n        \"description\": \"Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)\",\n        \"min_version\": \"0.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_setup_db_on_start\",\n        \"description\": \"Allows setup of ranger db and java patches to be called multiple times on each START\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_solr_config_support\",\n        \"description\": \"Showing Ranger solrconfig.xml on UI\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"core_site_for_ranger_plugins\",\n        \"description\": \"Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"secure_ranger_ssl_password\",\n        \"description\": \"Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"tls_toolkit_san\",\n        \"description\": \"Support subject alternative name flag\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"admin_toolkit_support\",\n        \"description\": \"Supports the nifi admin toolkit\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"nifi_jaas_conf_create\",\n        \"description\": \"Create NIFI jaas configuration when kerberos is enabled\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_remove_rootpath\",\n        \"description\": \"Registry remove root path setting\",\n        \"min_version\": \"3.0.2.0\"\n      },\n      {\n        \"name\": \"registry_allowed_resources_support\",\n        \"description\": \"Registry allowed resources\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"registry_rewriteuri_filter_support\",\n        \"description\": \"Registry RewriteUri servlet filter\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n         \"name\": \"registry_support_schema_migrate\",\n         \"description\": \"Support schema migrate in registry for version 3.1 onwards\",\n         \"min_version\": \"3.1.0.0\"\n       },\n       {\n         \"name\": \"sam_support_schema_migrate\",\n         \"description\": \"Support schema migrate in SAM for version 3.1 onwards\",\n         \"min_version\": \"3.1.0.0\"\n       },\n      {\n        \"name\": \"sam_storage_core_in_registry\",\n        \"description\": \"Storage core module moved to registry\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"sam_db_file_storage\",\n        \"description\": \"DB based file storage in SAM\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"kafka_extended_sasl_support\",\n        \"description\": \"Support SASL PLAIN and GSSAPI\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypted_authorizers_config\",\n        \"description\": \"Support encrypted authorizers.xml configuration for version 3.1 onwards\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"registry_support_db_user_creation\",\n        \"description\": \"Supports registry's database and user creation on the fly\",\n        \"min_version\": \"3.2.0.0\"\n      },\n      {\n        \"name\": \"streamline_support_db_user_creation\",\n        \"description\": \"Supports Streamline's database and user creation on the fly\",\n        \"min_version\": \"3.2.0.0\"\n      },\n      {\n        \"name\": \"nifi_auto_client_registration\",\n        \"description\": \"Supports NiFi's client registration in runtime\",\n        \"min_version\": \"3.2.0.0\"\n      },\n      {\n        \"name\": \"nifi_toolkit_package\",\n        \"description\": \"Supports NiFi Toolkit package from repository\",\n        \"min_version\": \"3.3.0.0\"\n      }\n    ]\n  }\n}",
                    "stack_tools": "{\n  \"HDF\": {\n    \"stack_selector\": [\n      \"hdf-select\",\n      \"/usr/bin/hdf-select\",\n      \"hdf-select\"\n    ],\n    \"conf_selector\": [\n      \"hdfconf-select\",\n      \"/usr/bin/hdfconf-select\",\n      \"hdf-select\"\n    ]\n  }\n}",
                    "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
                    "stack_root": "{\"HDF\":\"/usr/hdf\"}",
                    "fetch_nonlocal_groups": "true",
                    "kerberos_domain": "EXAMPLE.COM",
                    "stack_packages": "{\n  \"HDF\": {\n    \"stack-select\": {\n      \"KAFKA\": {\n        \"KAFKA_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"kafka-broker\",\n          \"INSTALL\": [\n            \"kafka-broker\"\n          ],\n          \"PATCH\": [\n            \"kafka-broker\"\n          ],\n          \"STANDARD\": [\n            \"kafka-broker\"\n          ]\n        }\n      },\n      \"RANGER\": {\n        \"RANGER_ADMIN\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-admin\",\n          \"INSTALL\": [\n            \"ranger-admin\"\n          ],\n          \"PATCH\": [\n            \"ranger-admin\"\n          ],\n          \"STANDARD\": [\n            \"ranger-admin\"\n          ]\n        },\n        \"RANGER_TAGSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-tagsync\",\n          \"INSTALL\": [\n            \"ranger-tagsync\"\n          ],\n          \"PATCH\": [\n            \"ranger-tagsync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-tagsync\"\n          ]\n        },\n        \"RANGER_USERSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-usersync\",\n          \"INSTALL\": [\n            \"ranger-usersync\"\n          ],\n          \"PATCH\": [\n            \"ranger-usersync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-usersync\"\n          ]\n        }\n      },\n      \"RANGER_KMS\": {\n        \"RANGER_KMS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-kms\",\n          \"INSTALL\": [\n            \"ranger-kms\"\n          ],\n          \"PATCH\": [\n            \"ranger-kms\"\n          ],\n          \"STANDARD\": [\n            \"ranger-kms\"\n          ]\n        }\n      },\n      \"STORM\": {\n        \"NIMBUS\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-nimbus\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ]\n        },\n        \"SUPERVISOR\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-supervisor\",\n          \"INSTALL\": [\n            \"storm-supervisor\"\n          ],\n          \"PATCH\": [\n            \"storm-supervisor\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ]\n        },\n        \"DRPC_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        },\n        \"STORM_UI_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        }\n      },\n      \"ZOOKEEPER\": {\n        \"ZOOKEEPER_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-client\",\n          \"INSTALL\": [\n            \"zookeeper-client\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-client\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-client\"\n          ]\n        },\n        \"ZOOKEEPER_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-server\",\n          \"INSTALL\": [\n            \"zookeeper-server\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-server\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-server\"\n          ]\n        }\n      },\n      \"NIFI\": {\n        \"NIFI_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"nifi\",\n          \"INSTALL\": [\n            \"nifi\",\n            \"nifi-toolkit\"\n          ],\n          \"PATCH\": [\n            \"nifi\",\n            \"nifi-toolkit\"\n          ],\n          \"STANDARD\": [\n            \"nifi\",\n            \"nifi-toolkit\"\n          ]\n        },\n        \"NIFI_CA\": {\n          \"STACK-SELECT-PACKAGE\": \"nifi-toolkit\",\n          \"INSTALL\": [\n            \"nifi-toolkit\"\n          ],\n          \"PATCH\": [\n            \"nifi-toolkit\"\n          ],\n          \"STANDARD\": [\n            \"nifi-toolkit\"\n          ]\n        }\n       },\n      \"NIFI_REGISTRY\": {\n        \"NIFI_REGISTRY_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"nifi-registry\",\n          \"INSTALL\": [\n            \"nifi-registry\",\n            \"nifi-toolkit\"\n          ],\n          \"PATCH\": [\n            \"nifi-registry\",\n            \"nifi-toolkit\"\n          ],\n          \"STANDARD\": [\n            \"nifi-registry\",\n            \"nifi-toolkit\"\n          ]\n        }\n      },\n       \"REGISTRY\": {\n        \"REGISTRY_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"registry\",\n          \"INSTALL\": [\n            \"registry\"\n          ],\n          \"PATCH\": [\n            \"registry\"\n          ],\n          \"STANDARD\": [\n            \"registry\"\n          ]\n        }\n      },\n      \"STREAMLINE\": {\n        \"STREAMLINE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"streamline\",\n          \"INSTALL\": [\n            \"streamline\"\n          ],\n          \"PATCH\": [\n            \"streamline\"\n          ],\n          \"STANDARD\": [\n            \"streamline\"\n          ]\n        }\n      },\n      \"KNOX\": {\n        \"KNOX_GATEWAY\": {\n          \"STACK-SELECT-PACKAGE\": \"knox-server\",\n          \"INSTALL\": [\n            \"knox-server\"\n          ],\n          \"PATCH\": [\n            \"knox-server\"\n          ],\n          \"STANDARD\": [\n            \"knox-server\"\n          ]\n        }\n      }\n    },\n    \"conf-select\": {\n      \"kafka\": [\n        {\n          \"conf_dir\": \"/etc/kafka/conf\",\n          \"current_dir\": \"{0}/current/kafka-broker/conf\",\n          \"component\": \"kafka-broker\"\n        }\n      ],\n      \"nifi\": [\n        {\n          \"conf_dir\": \"/etc/nifi/conf\",\n          \"current_dir\": \"{0}/current/nifi/conf\",\n          \"component\": \"nifi\"\n        }\n      ],\n      \"nifi-registry\": [\n        {\n          \"conf_dir\": \"/etc/nifi-registry/conf\",\n          \"current_dir\": \"{0}/current/nifi-registry/conf\",\n          \"component\": \"nifi-registry\"\n        }\n      ],\n      \"nifi-toolkit\": [\n        {\n          \"conf_dir\": \"/etc/nifi-toolkit/conf\",\n          \"current_dir\": \"{0}/current/nifi-toolkit/conf\",\n          \"component\": \"nifi-registry\"\n        }\n      ],\n      \"streamline\": [\n        {\n          \"conf_dir\": \"/etc/streamline/conf\",\n          \"current_dir\": \"{0}/current/streamline/conf\",\n          \"component\": \"streamline\"\n        }\n      ],\n      \"registry\": [\n        {\n          \"conf_dir\": \"/etc/registry/conf\",\n          \"current_dir\": \"{0}/current/registry/conf\",\n          \"component\": \"registry\"\n        }\n      ],\n      \"ranger-admin\": [\n        {\n          \"conf_dir\": \"/etc/ranger/admin/conf\",\n          \"current_dir\": \"{0}/current/ranger-admin/conf\",\n          \"component\": \"ranger-admin\"\n        }\n      ],\n      \"ranger-kms\": [\n        {\n          \"conf_dir\": \"/etc/ranger/kms/conf\",\n          \"current_dir\": \"{0}/current/ranger-kms/conf\",\n          \"component\": \"ranger-kms\"\n        }\n      ],\n      \"ranger-tagsync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/tagsync/conf\",\n          \"current_dir\": \"{0}/current/ranger-tagsync/conf\",\n          \"component\": \"ranger-tagsync\"\n        }\n      ],\n      \"ranger-usersync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/usersync/conf\",\n          \"current_dir\": \"{0}/current/ranger-usersync/conf\",\n          \"component\": \"ranger-usersync\"\n        }\n      ],\n      \"storm\": [\n        {\n          \"conf_dir\": \"/etc/storm/conf\",\n          \"current_dir\": \"{0}/current/storm-client/conf\",\n          \"component\": \"storm-client\"\n        }\n      ],\n      \"storm-slider-client\": [\n        {\n          \"conf_dir\": \"/etc/storm-slider-client/conf\",\n          \"current_dir\": \"{0}/current/storm-slider-client/conf\",\n          \"component\": \"storm-slider-client\"\n        }\n      ],\n      \"zookeeper\": [\n        {\n          \"conf_dir\": \"/etc/zookeeper/conf\",\n          \"current_dir\": \"{0}/current/zookeeper-client/conf\",\n          \"component\": \"zookeeper-client\"\n        }\n      ],\n      \"knox\": [\n        {\n          \"conf_dir\": \"/etc/knox/conf\",\n          \"current_dir\": \"{0}/current/knox-server/conf\",\n          \"component\": \"knox-server\"\n        }\n      ]\n    }\n  }\n}",
                    "user_group": "hadoop",
                    "sysprep_skip_setup_jce": "false",
                    "override_uid": "true",
                    "security_enabled": "false",
                    "recovery_lifetime_max_count": "1024",
                    "recovery_type": "AUTO_START",
                    "repo_suse_rhel_template": "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
                    "sysprep_skip_create_users_and_groups": "false",
                    "recovery_enabled": "true",
                    "smokeuser": "ambari-qa",
                    "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
                    "alerts_repeat_tolerance": "1",
                    "recovery_window_in_minutes": "60",
                    "stack_name": "HDF",
                    "ignore_groupsusers_create": "false"
                }
            }
        },
        {
            "ams-grafana-env": {
                "properties_attributes": {},
                "properties": {
                    "metrics_grafana_log_dir": "/var/log/ambari-metrics-grafana",
                    "metrics_grafana_pid_dir": "/var/run/ambari-metrics-grafana",
                    "content": "\n# Set environment variables here.\n\n# AMS UI Server Home Dir\nexport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}\n\n# AMS UI Server Data Dir\nexport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}\n\n# AMS UI Server Log Dir\nexport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}\n\n# AMS UI Server PID Dir\nexport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
                    "metrics_grafana_data_dir": "/var/lib/ambari-metrics-grafana",
                    "metrics_grafana_username": "admin"
                }
            }
        },
        {
            "nifi-registry-env": {
                "properties_attributes": {},
                "properties": {
                    "nifi_registry_log_dir": "/var/log/nifi-registry",
                    "nifi_registry_group": "nifiregistry",
                    "nifi_registry_pid_dir": "/var/run/nifi-registry",
                    "nifi_registry_user": "nifiregistry",
                    "content": "\n            #!/bin/sh\n            #\n            #    Licensed to the Apache Software Foundation (ASF) under one or more\n            #    contributor license agreements.  See the NOTICE file distributed with\n            #    this work for additional information regarding copyright ownership.\n            #    The ASF licenses this file to You under the Apache License, Version 2.0\n            #    (the \"License\"); you may not use this file except in compliance with\n            #    the License.  You may obtain a copy of the License at\n            #\n            #       http://www.apache.org/licenses/LICENSE-2.0\n            #\n            #    Unless required by applicable law or agreed to in writing, software\n            #    distributed under the License is distributed on an \"AS IS\" BASIS,\n            #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            #    See the License for the specific language governing permissions and\n            #    limitations under the License.\n            #\n\n            # The java implementation to use.\n            export JAVA_HOME={{jdk64_home}}\n\n            export NIFI_REGISTRY_HOME={{nifi_registry_install_dir}}\n\n            #The directory for the NiFi pid file\n            export NIFI_REGISTRY_PID_DIR=\"{{nifi_registry_pid_dir}}\"\n\n            #The directory for NiFi log files\n            export NIFI_LOG_DIR=\"{{nifi_registry_log_dir}}\""
                }
            }
        },
        {
            "product-info": {
                "properties_attributes": {},
                "properties": {
                    "product-info-content": "\n{\n    \"schemaVersion\" : \"1.0.0\",\n    \"productId\": \"{{stackName}}\",\n    \"componentId\": \"{{stackName}}\",\n    \"productVersion\" : \"{{stackVersion}}\",\n    \"type\":\"cluster\",\n    \"instanceInfo\": {\n        \"guid\": \"\",\n        \"parentGuid\": \"\",\n        \"name\":\"{{clusterName}}\",\n        \"flexSubscriptionId\": \"{{flexSubscriptionId}}\",\n        \"provider\": \"\",\n        \"region\": \"\"\n     }\n}"
                }
            }
        }
    ],
    "host_groups": [
        {
            "components": [
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "NIFI_MASTER"
                },
                {
                    "name": "INFRA_SOLR_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                }
            ],
            "configurations": [],
            "name": "host_group_2",
            "cardinality": "1"
        },
        {
            "components": [
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "HST_SERVER"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "NIFI_MASTER"
                },
                {
                    "name": "INFRA_SOLR"
                },
                {
                    "name": "INFRA_SOLR_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "METRICS_GRAFANA"
                },
                {
                    "name": "NIFI_REGISTRY_MASTER"
                }
            ],
            "configurations": [],
            "name": "host_group_1",
            "cardinality": "1"
        },
        {
            "components": [
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "NIFI_MASTER"
                },
                {
                    "name": "INFRA_SOLR_CLIENT"
                },
                {
                    "name": "NIFI_CA"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "METRICS_COLLECTOR"
                }
            ],
            "configurations": [],
            "name": "host_group_3",
            "cardinality": "1"
        }
    ],
    "settings": [
        {
            "recovery_settings": [
                {
                    "recovery_enabled": "false"
                }
            ]
        },
        {
            "service_settings": [
                {
                    "recovery_enabled": "false",
                    "name": "AMBARI_INFRA_SOLR"
                },
                {
                    "recovery_enabled": "false",
                    "name": "NIFI_REGISTRY"
                },
                {
                    "recovery_enabled": "false",
                    "name": "NIFI"
                },
                {
                    "recovery_enabled": "false",
                    "name": "SMARTSENSE"
                },
                {
                    "recovery_enabled": "false",
                    "name": "ZOOKEEPER"
                },
                {
                    "recovery_enabled": "false",
                    "name": "AMBARI_METRICS"
                }
            ]
        },
        {
            "component_settings": [
                {
                    "recovery_enabled": "false",
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "recovery_enabled": "false",
                    "name": "METRICS_MONITOR"
                },
                {
                    "recovery_enabled": "false",
                    "name": "NIFI_REGISTRY_MASTER"
                },
                {
                    "recovery_enabled": "false",
                    "name": "HST_SERVER"
                },
                {
                    "recovery_enabled": "false",
                    "name": "NIFI_MASTER"
                },
                {
                    "recovery_enabled": "false",
                    "name": "INFRA_SOLR_CLIENT"
                }
            ]
        }
    ],
    "Blueprints": {
    	"blueprint_name": "hdf-aws-deployment",
        "stack_name": "HDF",
        "stack_version": "3.3"
    }
}